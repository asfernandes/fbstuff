/* This file was autogenerated by cloop - Cross Language Object Oriented Programming */

#ifndef FB_C_API_H
#define FB_C_API_H

#include <stdint.h>

#ifndef CLOOP_EXTERN_C
#ifdef __cplusplus
#define CLOOP_EXTERN_C extern "C"
#else
#define CLOOP_EXTERN_C
#endif
#endif


struct FB_IVersioned;
struct FB_IReferenceCounted;
struct FB_IDisposable;
struct FB_IStatus;
struct FB_IMaster;
struct FB_IPluginBase;
struct FB_IPluginSet;
struct FB_IConfigEntry;
struct FB_IConfig;
struct FB_IFirebirdConf;
struct FB_IPluginConfig;
struct FB_IPluginFactory;
struct FB_IPluginModule;
struct FB_IPluginManager;
struct FB_ICryptKey;
struct FB_IConfigManager;
struct FB_IEventCallback;
struct FB_IBlob;
struct FB_ITransaction;
struct FB_IMessageMetadata;
struct FB_IMetadataBuilder;
struct FB_IResultSet;
struct FB_IStatement;
struct FB_IRequest;
struct FB_IEvents;
struct FB_IAttachment;
struct FB_IService;
struct FB_IProvider;
struct FB_IDtcStart;
struct FB_IDtc;
struct FB_IAuth;
struct FB_IWriter;
struct FB_IServerBlock;
struct FB_IClientBlock;
struct FB_IServer;
struct FB_IClient;
struct FB_IUserField;
struct FB_ICharUserField;
struct FB_IIntUserField;
struct FB_IUser;
struct FB_IListUsers;
struct FB_ILogonInfo;
struct FB_IManagement;
struct FB_IWireCryptPlugin;
struct FB_ICryptKeyCallback;
struct FB_IKeyHolderPlugin;
struct FB_IDbCryptPlugin;
struct FB_IExternalContext;
struct FB_IExternalResultSet;
struct FB_IExternalFunction;
struct FB_IExternalProcedure;
struct FB_IExternalTrigger;
struct FB_IRoutineMetadata;
struct FB_IExternalEngine;
struct FB_ITimer;
struct FB_ITimerControl;
struct FB_IVersionCallback;
struct FB_IUtil;
struct FB_IXpbBuilder;
struct FB_ITraceConnection;
struct FB_ITraceDatabaseConnection;
struct FB_ITraceTransaction;
struct FB_ITraceParams;
struct FB_ITraceStatement;
struct FB_ITraceSQLStatement;
struct FB_ITraceBLRStatement;
struct FB_ITraceDYNRequest;
struct FB_ITraceContextVariable;
struct FB_ITraceProcedure;
struct FB_ITraceFunction;
struct FB_ITraceTrigger;
struct FB_ITraceServiceConnection;
struct FB_ITraceStatusVector;
struct FB_ITraceSweepInfo;
struct FB_ITraceLogWriter;
struct FB_ITraceInitInfo;
struct FB_ITracePlugin;
struct FB_ITraceFactory;
struct FB_IUdrFunctionFactory;
struct FB_IUdrProcedureFactory;
struct FB_IUdrTriggerFactory;
struct FB_IUdrPlugin;


#define FB_IVersioned_VERSION 0

struct FB_IVersioned;

struct FB_IVersionedVTable
{
	void* cloopDummy[1];
	uintptr_t version;
};

struct FB_IVersioned
{
	void* cloopDummy[1];
	struct FB_IVersionedVTable* vtable;
};


#define FB_IReferenceCounted_VERSION 2

struct FB_IReferenceCounted;

struct FB_IReferenceCountedVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IReferenceCounted* self);
	int (*release)(struct FB_IReferenceCounted* self);
};

struct FB_IReferenceCounted
{
	void* cloopDummy[1];
	struct FB_IReferenceCountedVTable* vtable;
};

CLOOP_EXTERN_C void FB_IReferenceCounted_addRef(struct FB_IReferenceCounted* self);
CLOOP_EXTERN_C int FB_IReferenceCounted_release(struct FB_IReferenceCounted* self);

#define FB_IDisposable_VERSION 1

struct FB_IDisposable;

struct FB_IDisposableVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IDisposable* self);
};

struct FB_IDisposable
{
	void* cloopDummy[1];
	struct FB_IDisposableVTable* vtable;
};

CLOOP_EXTERN_C void FB_IDisposable_dispose(struct FB_IDisposable* self);

#define FB_IStatus_VERSION 10

#define FB_IStatus_STATE_WARNINGS ((unsigned) (1))
#define FB_IStatus_STATE_ERRORS ((unsigned) (2))
#define FB_IStatus_RESULT_ERROR ((int) (-1))
#define FB_IStatus_RESULT_OK ((int) (0))
#define FB_IStatus_RESULT_NO_DATA ((int) (1))
#define FB_IStatus_RESULT_SEGMENT ((int) (2))

struct FB_IStatus;

struct FB_IStatusVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IStatus* self);
	void (*init)(struct FB_IStatus* self);
	unsigned (*getState)(const struct FB_IStatus* self);
	void (*setErrors2)(struct FB_IStatus* self, unsigned length, const intptr_t* value);
	void (*setWarnings2)(struct FB_IStatus* self, unsigned length, const intptr_t* value);
	void (*setErrors)(struct FB_IStatus* self, const intptr_t* value);
	void (*setWarnings)(struct FB_IStatus* self, const intptr_t* value);
	const intptr_t* (*getErrors)(const struct FB_IStatus* self);
	const intptr_t* (*getWarnings)(const struct FB_IStatus* self);
	struct FB_IStatus* (*clone)(const struct FB_IStatus* self);
};

struct FB_IStatus
{
	void* cloopDummy[1];
	struct FB_IStatusVTable* vtable;
};

CLOOP_EXTERN_C void FB_IStatus_dispose(struct FB_IStatus* self);
CLOOP_EXTERN_C void FB_IStatus_init(struct FB_IStatus* self);
CLOOP_EXTERN_C unsigned FB_IStatus_getState(const struct FB_IStatus* self);
CLOOP_EXTERN_C void FB_IStatus_setErrors2(struct FB_IStatus* self, unsigned length, const intptr_t* value);
CLOOP_EXTERN_C void FB_IStatus_setWarnings2(struct FB_IStatus* self, unsigned length, const intptr_t* value);
CLOOP_EXTERN_C void FB_IStatus_setErrors(struct FB_IStatus* self, const intptr_t* value);
CLOOP_EXTERN_C void FB_IStatus_setWarnings(struct FB_IStatus* self, const intptr_t* value);
CLOOP_EXTERN_C const intptr_t* FB_IStatus_getErrors(const struct FB_IStatus* self);
CLOOP_EXTERN_C const intptr_t* FB_IStatus_getWarnings(const struct FB_IStatus* self);
CLOOP_EXTERN_C struct FB_IStatus* FB_IStatus_clone(const struct FB_IStatus* self);

#define FB_IMaster_VERSION 12

struct FB_IMaster;

struct FB_IMasterVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	struct FB_IStatus* (*getStatus)(struct FB_IMaster* self);
	struct FB_IProvider* (*getDispatcher)(struct FB_IMaster* self);
	struct FB_IPluginManager* (*getPluginManager)(struct FB_IMaster* self);
	struct FB_ITimerControl* (*getTimerControl)(struct FB_IMaster* self);
	struct FB_IDtc* (*getDtc)(struct FB_IMaster* self);
	struct FB_IAttachment* (*registerAttachment)(struct FB_IMaster* self, struct FB_IProvider* provider, struct FB_IAttachment* attachment);
	struct FB_ITransaction* (*registerTransaction)(struct FB_IMaster* self, struct FB_IAttachment* attachment, struct FB_ITransaction* transaction);
	struct FB_IMetadataBuilder* (*getMetadataBuilder)(struct FB_IMaster* self, struct FB_IStatus* status, unsigned fieldCount);
	int (*serverMode)(struct FB_IMaster* self, int mode);
	struct FB_IUtil* (*getUtilInterface)(struct FB_IMaster* self);
	struct FB_IConfigManager* (*getConfigManager)(struct FB_IMaster* self);
	FB_BOOLEAN (*getProcessExiting)(struct FB_IMaster* self);
};

struct FB_IMaster
{
	void* cloopDummy[1];
	struct FB_IMasterVTable* vtable;
};

CLOOP_EXTERN_C struct FB_IStatus* FB_IMaster_getStatus(struct FB_IMaster* self);
CLOOP_EXTERN_C struct FB_IProvider* FB_IMaster_getDispatcher(struct FB_IMaster* self);
CLOOP_EXTERN_C struct FB_IPluginManager* FB_IMaster_getPluginManager(struct FB_IMaster* self);
CLOOP_EXTERN_C struct FB_ITimerControl* FB_IMaster_getTimerControl(struct FB_IMaster* self);
CLOOP_EXTERN_C struct FB_IDtc* FB_IMaster_getDtc(struct FB_IMaster* self);
CLOOP_EXTERN_C struct FB_IAttachment* FB_IMaster_registerAttachment(struct FB_IMaster* self, struct FB_IProvider* provider, struct FB_IAttachment* attachment);
CLOOP_EXTERN_C struct FB_ITransaction* FB_IMaster_registerTransaction(struct FB_IMaster* self, struct FB_IAttachment* attachment, struct FB_ITransaction* transaction);
CLOOP_EXTERN_C struct FB_IMetadataBuilder* FB_IMaster_getMetadataBuilder(struct FB_IMaster* self, struct FB_IStatus* status, unsigned fieldCount);
CLOOP_EXTERN_C int FB_IMaster_serverMode(struct FB_IMaster* self, int mode);
CLOOP_EXTERN_C struct FB_IUtil* FB_IMaster_getUtilInterface(struct FB_IMaster* self);
CLOOP_EXTERN_C struct FB_IConfigManager* FB_IMaster_getConfigManager(struct FB_IMaster* self);
CLOOP_EXTERN_C FB_BOOLEAN FB_IMaster_getProcessExiting(struct FB_IMaster* self);

#define FB_IPluginBase_VERSION 4

struct FB_IPluginBase;

struct FB_IPluginBaseVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IPluginBase* self);
	int (*release)(struct FB_IPluginBase* self);
	void (*setOwner)(struct FB_IPluginBase* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_IPluginBase* self);
};

struct FB_IPluginBase
{
	void* cloopDummy[1];
	struct FB_IPluginBaseVTable* vtable;
};

CLOOP_EXTERN_C void FB_IPluginBase_addRef(struct FB_IPluginBase* self);
CLOOP_EXTERN_C int FB_IPluginBase_release(struct FB_IPluginBase* self);
CLOOP_EXTERN_C void FB_IPluginBase_setOwner(struct FB_IPluginBase* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_IPluginBase_getOwner(struct FB_IPluginBase* self);

#define FB_IPluginSet_VERSION 7

struct FB_IPluginSet;

struct FB_IPluginSetVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IPluginSet* self);
	int (*release)(struct FB_IPluginSet* self);
	const char* (*getName)(const struct FB_IPluginSet* self);
	const char* (*getModuleName)(const struct FB_IPluginSet* self);
	struct FB_IPluginBase* (*getPlugin)(struct FB_IPluginSet* self, struct FB_IStatus* status);
	void (*next)(struct FB_IPluginSet* self, struct FB_IStatus* status);
	void (*set)(struct FB_IPluginSet* self, struct FB_IStatus* status, const char* s);
};

struct FB_IPluginSet
{
	void* cloopDummy[1];
	struct FB_IPluginSetVTable* vtable;
};

CLOOP_EXTERN_C void FB_IPluginSet_addRef(struct FB_IPluginSet* self);
CLOOP_EXTERN_C int FB_IPluginSet_release(struct FB_IPluginSet* self);
CLOOP_EXTERN_C const char* FB_IPluginSet_getName(const struct FB_IPluginSet* self);
CLOOP_EXTERN_C const char* FB_IPluginSet_getModuleName(const struct FB_IPluginSet* self);
CLOOP_EXTERN_C struct FB_IPluginBase* FB_IPluginSet_getPlugin(struct FB_IPluginSet* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IPluginSet_next(struct FB_IPluginSet* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IPluginSet_set(struct FB_IPluginSet* self, struct FB_IStatus* status, const char* s);

#define FB_IConfigEntry_VERSION 7

struct FB_IConfigEntry;

struct FB_IConfigEntryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IConfigEntry* self);
	int (*release)(struct FB_IConfigEntry* self);
	const char* (*getName)(struct FB_IConfigEntry* self);
	const char* (*getValue)(struct FB_IConfigEntry* self);
	ISC_INT64 (*getIntValue)(struct FB_IConfigEntry* self);
	FB_BOOLEAN (*getBoolValue)(struct FB_IConfigEntry* self);
	struct FB_IConfig* (*getSubConfig)(struct FB_IConfigEntry* self, struct FB_IStatus* status);
};

struct FB_IConfigEntry
{
	void* cloopDummy[1];
	struct FB_IConfigEntryVTable* vtable;
};

CLOOP_EXTERN_C void FB_IConfigEntry_addRef(struct FB_IConfigEntry* self);
CLOOP_EXTERN_C int FB_IConfigEntry_release(struct FB_IConfigEntry* self);
CLOOP_EXTERN_C const char* FB_IConfigEntry_getName(struct FB_IConfigEntry* self);
CLOOP_EXTERN_C const char* FB_IConfigEntry_getValue(struct FB_IConfigEntry* self);
CLOOP_EXTERN_C ISC_INT64 FB_IConfigEntry_getIntValue(struct FB_IConfigEntry* self);
CLOOP_EXTERN_C FB_BOOLEAN FB_IConfigEntry_getBoolValue(struct FB_IConfigEntry* self);
CLOOP_EXTERN_C struct FB_IConfig* FB_IConfigEntry_getSubConfig(struct FB_IConfigEntry* self, struct FB_IStatus* status);

#define FB_IConfig_VERSION 5

struct FB_IConfig;

struct FB_IConfigVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IConfig* self);
	int (*release)(struct FB_IConfig* self);
	struct FB_IConfigEntry* (*find)(struct FB_IConfig* self, struct FB_IStatus* status, const char* name);
	struct FB_IConfigEntry* (*findValue)(struct FB_IConfig* self, struct FB_IStatus* status, const char* name, const char* value);
	struct FB_IConfigEntry* (*findPos)(struct FB_IConfig* self, struct FB_IStatus* status, const char* name, unsigned pos);
};

struct FB_IConfig
{
	void* cloopDummy[1];
	struct FB_IConfigVTable* vtable;
};

CLOOP_EXTERN_C void FB_IConfig_addRef(struct FB_IConfig* self);
CLOOP_EXTERN_C int FB_IConfig_release(struct FB_IConfig* self);
CLOOP_EXTERN_C struct FB_IConfigEntry* FB_IConfig_find(struct FB_IConfig* self, struct FB_IStatus* status, const char* name);
CLOOP_EXTERN_C struct FB_IConfigEntry* FB_IConfig_findValue(struct FB_IConfig* self, struct FB_IStatus* status, const char* name, const char* value);
CLOOP_EXTERN_C struct FB_IConfigEntry* FB_IConfig_findPos(struct FB_IConfig* self, struct FB_IStatus* status, const char* name, unsigned pos);

#define FB_IFirebirdConf_VERSION 6

struct FB_IFirebirdConf;

struct FB_IFirebirdConfVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IFirebirdConf* self);
	int (*release)(struct FB_IFirebirdConf* self);
	unsigned (*getKey)(struct FB_IFirebirdConf* self, const char* name);
	ISC_INT64 (*asInteger)(struct FB_IFirebirdConf* self, unsigned key);
	const char* (*asString)(struct FB_IFirebirdConf* self, unsigned key);
	FB_BOOLEAN (*asBoolean)(struct FB_IFirebirdConf* self, unsigned key);
};

struct FB_IFirebirdConf
{
	void* cloopDummy[1];
	struct FB_IFirebirdConfVTable* vtable;
};

CLOOP_EXTERN_C void FB_IFirebirdConf_addRef(struct FB_IFirebirdConf* self);
CLOOP_EXTERN_C int FB_IFirebirdConf_release(struct FB_IFirebirdConf* self);
CLOOP_EXTERN_C unsigned FB_IFirebirdConf_getKey(struct FB_IFirebirdConf* self, const char* name);
CLOOP_EXTERN_C ISC_INT64 FB_IFirebirdConf_asInteger(struct FB_IFirebirdConf* self, unsigned key);
CLOOP_EXTERN_C const char* FB_IFirebirdConf_asString(struct FB_IFirebirdConf* self, unsigned key);
CLOOP_EXTERN_C FB_BOOLEAN FB_IFirebirdConf_asBoolean(struct FB_IFirebirdConf* self, unsigned key);

#define FB_IPluginConfig_VERSION 6

struct FB_IPluginConfig;

struct FB_IPluginConfigVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IPluginConfig* self);
	int (*release)(struct FB_IPluginConfig* self);
	const char* (*getConfigFileName)(struct FB_IPluginConfig* self);
	struct FB_IConfig* (*getDefaultConfig)(struct FB_IPluginConfig* self, struct FB_IStatus* status);
	struct FB_IFirebirdConf* (*getFirebirdConf)(struct FB_IPluginConfig* self, struct FB_IStatus* status);
	void (*setReleaseDelay)(struct FB_IPluginConfig* self, struct FB_IStatus* status, ISC_UINT64 microSeconds);
};

struct FB_IPluginConfig
{
	void* cloopDummy[1];
	struct FB_IPluginConfigVTable* vtable;
};

CLOOP_EXTERN_C void FB_IPluginConfig_addRef(struct FB_IPluginConfig* self);
CLOOP_EXTERN_C int FB_IPluginConfig_release(struct FB_IPluginConfig* self);
CLOOP_EXTERN_C const char* FB_IPluginConfig_getConfigFileName(struct FB_IPluginConfig* self);
CLOOP_EXTERN_C struct FB_IConfig* FB_IPluginConfig_getDefaultConfig(struct FB_IPluginConfig* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_IFirebirdConf* FB_IPluginConfig_getFirebirdConf(struct FB_IPluginConfig* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IPluginConfig_setReleaseDelay(struct FB_IPluginConfig* self, struct FB_IStatus* status, ISC_UINT64 microSeconds);

#define FB_IPluginFactory_VERSION 1

struct FB_IPluginFactory;

struct FB_IPluginFactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	struct FB_IPluginBase* (*createPlugin)(struct FB_IPluginFactory* self, struct FB_IStatus* status, struct FB_IPluginConfig* factoryParameter);
};

struct FB_IPluginFactory
{
	void* cloopDummy[1];
	struct FB_IPluginFactoryVTable* vtable;
};

CLOOP_EXTERN_C struct FB_IPluginBase* FB_IPluginFactory_createPlugin(struct FB_IPluginFactory* self, struct FB_IStatus* status, struct FB_IPluginConfig* factoryParameter);

#define FB_IPluginModule_VERSION 1

struct FB_IPluginModule;

struct FB_IPluginModuleVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*doClean)(struct FB_IPluginModule* self);
};

struct FB_IPluginModule
{
	void* cloopDummy[1];
	struct FB_IPluginModuleVTable* vtable;
};

CLOOP_EXTERN_C void FB_IPluginModule_doClean(struct FB_IPluginModule* self);

#define FB_IPluginManager_VERSION 6

#define FB_IPluginManager_TYPE_PROVIDER ((unsigned) (1))
#define FB_IPluginManager_TYPE_FIRST_NON_LIB ((unsigned) (2))
#define FB_IPluginManager_TYPE_AUTH_SERVER ((unsigned) (3))
#define FB_IPluginManager_TYPE_AUTH_CLIENT ((unsigned) (4))
#define FB_IPluginManager_TYPE_AUTH_USER_MANAGEMENT ((unsigned) (5))
#define FB_IPluginManager_TYPE_EXTERNAL_ENGINE ((unsigned) (6))
#define FB_IPluginManager_TYPE_TRACE ((unsigned) (7))
#define FB_IPluginManager_TYPE_WIRE_CRYPT ((unsigned) (8))
#define FB_IPluginManager_TYPE_DB_CRYPT ((unsigned) (9))
#define FB_IPluginManager_TYPE_KEY_HOLDER ((unsigned) (10))
#define FB_IPluginManager_TYPE_COUNT ((unsigned) (11))

struct FB_IPluginManager;

struct FB_IPluginManagerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*registerPluginFactory)(struct FB_IPluginManager* self, unsigned pluginType, const char* defaultName, struct FB_IPluginFactory* factory);
	void (*registerModule)(struct FB_IPluginManager* self, struct FB_IPluginModule* cleanup);
	void (*unregisterModule)(struct FB_IPluginManager* self, struct FB_IPluginModule* cleanup);
	struct FB_IPluginSet* (*getPlugins)(struct FB_IPluginManager* self, struct FB_IStatus* status, unsigned pluginType, const char* namesList, struct FB_IFirebirdConf* firebirdConf);
	struct FB_IConfig* (*getConfig)(struct FB_IPluginManager* self, struct FB_IStatus* status, const char* filename);
	void (*releasePlugin)(struct FB_IPluginManager* self, struct FB_IPluginBase* plugin);
};

struct FB_IPluginManager
{
	void* cloopDummy[1];
	struct FB_IPluginManagerVTable* vtable;
};

CLOOP_EXTERN_C void FB_IPluginManager_registerPluginFactory(struct FB_IPluginManager* self, unsigned pluginType, const char* defaultName, struct FB_IPluginFactory* factory);
CLOOP_EXTERN_C void FB_IPluginManager_registerModule(struct FB_IPluginManager* self, struct FB_IPluginModule* cleanup);
CLOOP_EXTERN_C void FB_IPluginManager_unregisterModule(struct FB_IPluginManager* self, struct FB_IPluginModule* cleanup);
CLOOP_EXTERN_C struct FB_IPluginSet* FB_IPluginManager_getPlugins(struct FB_IPluginManager* self, struct FB_IStatus* status, unsigned pluginType, const char* namesList, struct FB_IFirebirdConf* firebirdConf);
CLOOP_EXTERN_C struct FB_IConfig* FB_IPluginManager_getConfig(struct FB_IPluginManager* self, struct FB_IStatus* status, const char* filename);
CLOOP_EXTERN_C void FB_IPluginManager_releasePlugin(struct FB_IPluginManager* self, struct FB_IPluginBase* plugin);

#define FB_ICryptKey_VERSION 4

struct FB_ICryptKey;

struct FB_ICryptKeyVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*setSymmetric)(struct FB_ICryptKey* self, struct FB_IStatus* status, const char* type, unsigned keyLength, const void* key);
	void (*setAsymmetric)(struct FB_ICryptKey* self, struct FB_IStatus* status, const char* type, unsigned encryptKeyLength, const void* encryptKey, unsigned decryptKeyLength, const void* decryptKey);
	const void* (*getEncryptKey)(struct FB_ICryptKey* self, unsigned* length);
	const void* (*getDecryptKey)(struct FB_ICryptKey* self, unsigned* length);
};

struct FB_ICryptKey
{
	void* cloopDummy[1];
	struct FB_ICryptKeyVTable* vtable;
};

CLOOP_EXTERN_C void FB_ICryptKey_setSymmetric(struct FB_ICryptKey* self, struct FB_IStatus* status, const char* type, unsigned keyLength, const void* key);
CLOOP_EXTERN_C void FB_ICryptKey_setAsymmetric(struct FB_ICryptKey* self, struct FB_IStatus* status, const char* type, unsigned encryptKeyLength, const void* encryptKey, unsigned decryptKeyLength, const void* decryptKey);
CLOOP_EXTERN_C const void* FB_ICryptKey_getEncryptKey(struct FB_ICryptKey* self, unsigned* length);
CLOOP_EXTERN_C const void* FB_ICryptKey_getDecryptKey(struct FB_ICryptKey* self, unsigned* length);

#define FB_IConfigManager_VERSION 6

#define FB_IConfigManager_DIR_BIN ((unsigned) (0))
#define FB_IConfigManager_DIR_SBIN ((unsigned) (1))
#define FB_IConfigManager_DIR_CONF ((unsigned) (2))
#define FB_IConfigManager_DIR_LIB ((unsigned) (3))
#define FB_IConfigManager_DIR_INC ((unsigned) (4))
#define FB_IConfigManager_DIR_DOC ((unsigned) (5))
#define FB_IConfigManager_DIR_UDF ((unsigned) (6))
#define FB_IConfigManager_DIR_SAMPLE ((unsigned) (7))
#define FB_IConfigManager_DIR_SAMPLEDB ((unsigned) (8))
#define FB_IConfigManager_DIR_HELP ((unsigned) (9))
#define FB_IConfigManager_DIR_INTL ((unsigned) (10))
#define FB_IConfigManager_DIR_MISC ((unsigned) (11))
#define FB_IConfigManager_DIR_SECDB ((unsigned) (12))
#define FB_IConfigManager_DIR_MSG ((unsigned) (13))
#define FB_IConfigManager_DIR_LOG ((unsigned) (14))
#define FB_IConfigManager_DIR_GUARD ((unsigned) (15))
#define FB_IConfigManager_DIR_PLUGINS ((unsigned) (16))
#define FB_IConfigManager_DIR_COUNT ((unsigned) (17))

struct FB_IConfigManager;

struct FB_IConfigManagerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getDirectory)(struct FB_IConfigManager* self, unsigned code);
	struct FB_IFirebirdConf* (*getFirebirdConf)(struct FB_IConfigManager* self);
	struct FB_IFirebirdConf* (*getDatabaseConf)(struct FB_IConfigManager* self, const char* dbName);
	struct FB_IConfig* (*getPluginConfig)(struct FB_IConfigManager* self, const char* configuredPlugin);
	const char* (*getInstallDirectory)(struct FB_IConfigManager* self);
	const char* (*getRootDirectory)(struct FB_IConfigManager* self);
};

struct FB_IConfigManager
{
	void* cloopDummy[1];
	struct FB_IConfigManagerVTable* vtable;
};

CLOOP_EXTERN_C const char* FB_IConfigManager_getDirectory(struct FB_IConfigManager* self, unsigned code);
CLOOP_EXTERN_C struct FB_IFirebirdConf* FB_IConfigManager_getFirebirdConf(struct FB_IConfigManager* self);
CLOOP_EXTERN_C struct FB_IFirebirdConf* FB_IConfigManager_getDatabaseConf(struct FB_IConfigManager* self, const char* dbName);
CLOOP_EXTERN_C struct FB_IConfig* FB_IConfigManager_getPluginConfig(struct FB_IConfigManager* self, const char* configuredPlugin);
CLOOP_EXTERN_C const char* FB_IConfigManager_getInstallDirectory(struct FB_IConfigManager* self);
CLOOP_EXTERN_C const char* FB_IConfigManager_getRootDirectory(struct FB_IConfigManager* self);

#define FB_IEventCallback_VERSION 3

struct FB_IEventCallback;

struct FB_IEventCallbackVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IEventCallback* self);
	int (*release)(struct FB_IEventCallback* self);
	void (*eventCallbackFunction)(struct FB_IEventCallback* self, unsigned length, const unsigned char* events);
};

struct FB_IEventCallback
{
	void* cloopDummy[1];
	struct FB_IEventCallbackVTable* vtable;
};

CLOOP_EXTERN_C void FB_IEventCallback_addRef(struct FB_IEventCallback* self);
CLOOP_EXTERN_C int FB_IEventCallback_release(struct FB_IEventCallback* self);
CLOOP_EXTERN_C void FB_IEventCallback_eventCallbackFunction(struct FB_IEventCallback* self, unsigned length, const unsigned char* events);

#define FB_IBlob_VERSION 8

struct FB_IBlob;

struct FB_IBlobVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IBlob* self);
	int (*release)(struct FB_IBlob* self);
	void (*getInfo)(struct FB_IBlob* self, struct FB_IStatus* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
	int (*getSegment)(struct FB_IBlob* self, struct FB_IStatus* status, unsigned bufferLength, void* buffer, unsigned* segmentLength);
	void (*putSegment)(struct FB_IBlob* self, struct FB_IStatus* status, unsigned length, const void* buffer);
	void (*cancel)(struct FB_IBlob* self, struct FB_IStatus* status);
	void (*close)(struct FB_IBlob* self, struct FB_IStatus* status);
	int (*seek)(struct FB_IBlob* self, struct FB_IStatus* status, int mode, int offset);
};

struct FB_IBlob
{
	void* cloopDummy[1];
	struct FB_IBlobVTable* vtable;
};

CLOOP_EXTERN_C void FB_IBlob_addRef(struct FB_IBlob* self);
CLOOP_EXTERN_C int FB_IBlob_release(struct FB_IBlob* self);
CLOOP_EXTERN_C void FB_IBlob_getInfo(struct FB_IBlob* self, struct FB_IStatus* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C int FB_IBlob_getSegment(struct FB_IBlob* self, struct FB_IStatus* status, unsigned bufferLength, void* buffer, unsigned* segmentLength);
CLOOP_EXTERN_C void FB_IBlob_putSegment(struct FB_IBlob* self, struct FB_IStatus* status, unsigned length, const void* buffer);
CLOOP_EXTERN_C void FB_IBlob_cancel(struct FB_IBlob* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IBlob_close(struct FB_IBlob* self, struct FB_IStatus* status);
CLOOP_EXTERN_C int FB_IBlob_seek(struct FB_IBlob* self, struct FB_IStatus* status, int mode, int offset);

#define FB_ITransaction_VERSION 12

struct FB_ITransaction;

struct FB_ITransactionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_ITransaction* self);
	int (*release)(struct FB_ITransaction* self);
	void (*getInfo)(struct FB_ITransaction* self, struct FB_IStatus* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
	void (*prepare)(struct FB_ITransaction* self, struct FB_IStatus* status, unsigned msgLength, const unsigned char* message);
	void (*commit)(struct FB_ITransaction* self, struct FB_IStatus* status);
	void (*commitRetaining)(struct FB_ITransaction* self, struct FB_IStatus* status);
	void (*rollback)(struct FB_ITransaction* self, struct FB_IStatus* status);
	void (*rollbackRetaining)(struct FB_ITransaction* self, struct FB_IStatus* status);
	void (*disconnect)(struct FB_ITransaction* self, struct FB_IStatus* status);
	struct FB_ITransaction* (*join)(struct FB_ITransaction* self, struct FB_IStatus* status, struct FB_ITransaction* transaction);
	struct FB_ITransaction* (*validate)(struct FB_ITransaction* self, struct FB_IStatus* status, struct FB_IAttachment* attachment);
	struct FB_ITransaction* (*enterDtc)(struct FB_ITransaction* self, struct FB_IStatus* status);
};

struct FB_ITransaction
{
	void* cloopDummy[1];
	struct FB_ITransactionVTable* vtable;
};

CLOOP_EXTERN_C void FB_ITransaction_addRef(struct FB_ITransaction* self);
CLOOP_EXTERN_C int FB_ITransaction_release(struct FB_ITransaction* self);
CLOOP_EXTERN_C void FB_ITransaction_getInfo(struct FB_ITransaction* self, struct FB_IStatus* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C void FB_ITransaction_prepare(struct FB_ITransaction* self, struct FB_IStatus* status, unsigned msgLength, const unsigned char* message);
CLOOP_EXTERN_C void FB_ITransaction_commit(struct FB_ITransaction* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_ITransaction_commitRetaining(struct FB_ITransaction* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_ITransaction_rollback(struct FB_ITransaction* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_ITransaction_rollbackRetaining(struct FB_ITransaction* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_ITransaction_disconnect(struct FB_ITransaction* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_ITransaction* FB_ITransaction_join(struct FB_ITransaction* self, struct FB_IStatus* status, struct FB_ITransaction* transaction);
CLOOP_EXTERN_C struct FB_ITransaction* FB_ITransaction_validate(struct FB_ITransaction* self, struct FB_IStatus* status, struct FB_IAttachment* attachment);
CLOOP_EXTERN_C struct FB_ITransaction* FB_ITransaction_enterDtc(struct FB_ITransaction* self, struct FB_IStatus* status);

#define FB_IMessageMetadata_VERSION 17

struct FB_IMessageMetadata;

struct FB_IMessageMetadataVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IMessageMetadata* self);
	int (*release)(struct FB_IMessageMetadata* self);
	unsigned (*getCount)(struct FB_IMessageMetadata* self, struct FB_IStatus* status);
	const char* (*getField)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	const char* (*getRelation)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	const char* (*getOwner)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	const char* (*getAlias)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	unsigned (*getType)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	FB_BOOLEAN (*isNullable)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	int (*getSubType)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	unsigned (*getLength)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	int (*getScale)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	unsigned (*getCharSet)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	unsigned (*getOffset)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	unsigned (*getNullOffset)(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
	struct FB_IMetadataBuilder* (*getBuilder)(struct FB_IMessageMetadata* self, struct FB_IStatus* status);
	unsigned (*getMessageLength)(struct FB_IMessageMetadata* self, struct FB_IStatus* status);
};

struct FB_IMessageMetadata
{
	void* cloopDummy[1];
	struct FB_IMessageMetadataVTable* vtable;
};

CLOOP_EXTERN_C void FB_IMessageMetadata_addRef(struct FB_IMessageMetadata* self);
CLOOP_EXTERN_C int FB_IMessageMetadata_release(struct FB_IMessageMetadata* self);
CLOOP_EXTERN_C unsigned FB_IMessageMetadata_getCount(struct FB_IMessageMetadata* self, struct FB_IStatus* status);
CLOOP_EXTERN_C const char* FB_IMessageMetadata_getField(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C const char* FB_IMessageMetadata_getRelation(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C const char* FB_IMessageMetadata_getOwner(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C const char* FB_IMessageMetadata_getAlias(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C unsigned FB_IMessageMetadata_getType(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C FB_BOOLEAN FB_IMessageMetadata_isNullable(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C int FB_IMessageMetadata_getSubType(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C unsigned FB_IMessageMetadata_getLength(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C int FB_IMessageMetadata_getScale(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C unsigned FB_IMessageMetadata_getCharSet(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C unsigned FB_IMessageMetadata_getOffset(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C unsigned FB_IMessageMetadata_getNullOffset(struct FB_IMessageMetadata* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C struct FB_IMetadataBuilder* FB_IMessageMetadata_getBuilder(struct FB_IMessageMetadata* self, struct FB_IStatus* status);
CLOOP_EXTERN_C unsigned FB_IMessageMetadata_getMessageLength(struct FB_IMessageMetadata* self, struct FB_IStatus* status);

#define FB_IMetadataBuilder_VERSION 12

struct FB_IMetadataBuilder;

struct FB_IMetadataBuilderVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IMetadataBuilder* self);
	int (*release)(struct FB_IMetadataBuilder* self);
	void (*setType)(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index, unsigned type);
	void (*setSubType)(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index, int subType);
	void (*setLength)(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index, unsigned length);
	void (*setCharSet)(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index, unsigned charSet);
	void (*setScale)(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index, unsigned scale);
	void (*truncate)(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned count);
	void (*moveNameToIndex)(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, const char* name, unsigned index);
	void (*remove)(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index);
	unsigned (*addField)(struct FB_IMetadataBuilder* self, struct FB_IStatus* status);
	struct FB_IMessageMetadata* (*getMetadata)(struct FB_IMetadataBuilder* self, struct FB_IStatus* status);
};

struct FB_IMetadataBuilder
{
	void* cloopDummy[1];
	struct FB_IMetadataBuilderVTable* vtable;
};

CLOOP_EXTERN_C void FB_IMetadataBuilder_addRef(struct FB_IMetadataBuilder* self);
CLOOP_EXTERN_C int FB_IMetadataBuilder_release(struct FB_IMetadataBuilder* self);
CLOOP_EXTERN_C void FB_IMetadataBuilder_setType(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index, unsigned type);
CLOOP_EXTERN_C void FB_IMetadataBuilder_setSubType(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index, int subType);
CLOOP_EXTERN_C void FB_IMetadataBuilder_setLength(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index, unsigned length);
CLOOP_EXTERN_C void FB_IMetadataBuilder_setCharSet(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index, unsigned charSet);
CLOOP_EXTERN_C void FB_IMetadataBuilder_setScale(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index, unsigned scale);
CLOOP_EXTERN_C void FB_IMetadataBuilder_truncate(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned count);
CLOOP_EXTERN_C void FB_IMetadataBuilder_moveNameToIndex(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, const char* name, unsigned index);
CLOOP_EXTERN_C void FB_IMetadataBuilder_remove(struct FB_IMetadataBuilder* self, struct FB_IStatus* status, unsigned index);
CLOOP_EXTERN_C unsigned FB_IMetadataBuilder_addField(struct FB_IMetadataBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_IMessageMetadata* FB_IMetadataBuilder_getMetadata(struct FB_IMetadataBuilder* self, struct FB_IStatus* status);

#define FB_IResultSet_VERSION 13

struct FB_IResultSet;

struct FB_IResultSetVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IResultSet* self);
	int (*release)(struct FB_IResultSet* self);
	int (*fetchNext)(struct FB_IResultSet* self, struct FB_IStatus* status, void* message);
	int (*fetchPrior)(struct FB_IResultSet* self, struct FB_IStatus* status, void* message);
	int (*fetchFirst)(struct FB_IResultSet* self, struct FB_IStatus* status, void* message);
	int (*fetchLast)(struct FB_IResultSet* self, struct FB_IStatus* status, void* message);
	int (*fetchAbsolute)(struct FB_IResultSet* self, struct FB_IStatus* status, int position, void* message);
	int (*fetchRelative)(struct FB_IResultSet* self, struct FB_IStatus* status, int offset, void* message);
	FB_BOOLEAN (*isEof)(struct FB_IResultSet* self, struct FB_IStatus* status);
	FB_BOOLEAN (*isBof)(struct FB_IResultSet* self, struct FB_IStatus* status);
	struct FB_IMessageMetadata* (*getMetadata)(struct FB_IResultSet* self, struct FB_IStatus* status);
	void (*close)(struct FB_IResultSet* self, struct FB_IStatus* status);
	void (*setDelayedOutputFormat)(struct FB_IResultSet* self, struct FB_IStatus* status, struct FB_IMessageMetadata* format);
};

struct FB_IResultSet
{
	void* cloopDummy[1];
	struct FB_IResultSetVTable* vtable;
};

CLOOP_EXTERN_C void FB_IResultSet_addRef(struct FB_IResultSet* self);
CLOOP_EXTERN_C int FB_IResultSet_release(struct FB_IResultSet* self);
CLOOP_EXTERN_C int FB_IResultSet_fetchNext(struct FB_IResultSet* self, struct FB_IStatus* status, void* message);
CLOOP_EXTERN_C int FB_IResultSet_fetchPrior(struct FB_IResultSet* self, struct FB_IStatus* status, void* message);
CLOOP_EXTERN_C int FB_IResultSet_fetchFirst(struct FB_IResultSet* self, struct FB_IStatus* status, void* message);
CLOOP_EXTERN_C int FB_IResultSet_fetchLast(struct FB_IResultSet* self, struct FB_IStatus* status, void* message);
CLOOP_EXTERN_C int FB_IResultSet_fetchAbsolute(struct FB_IResultSet* self, struct FB_IStatus* status, int position, void* message);
CLOOP_EXTERN_C int FB_IResultSet_fetchRelative(struct FB_IResultSet* self, struct FB_IStatus* status, int offset, void* message);
CLOOP_EXTERN_C FB_BOOLEAN FB_IResultSet_isEof(struct FB_IResultSet* self, struct FB_IStatus* status);
CLOOP_EXTERN_C FB_BOOLEAN FB_IResultSet_isBof(struct FB_IResultSet* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_IMessageMetadata* FB_IResultSet_getMetadata(struct FB_IResultSet* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IResultSet_close(struct FB_IResultSet* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IResultSet_setDelayedOutputFormat(struct FB_IResultSet* self, struct FB_IStatus* status, struct FB_IMessageMetadata* format);

#define FB_IStatement_VERSION 13

#define FB_IStatement_PREPARE_PREFETCH_NONE ((unsigned) (0))
#define FB_IStatement_PREPARE_PREFETCH_TYPE ((unsigned) (1))
#define FB_IStatement_PREPARE_PREFETCH_INPUT_PARAMETERS ((unsigned) (2))
#define FB_IStatement_PREPARE_PREFETCH_OUTPUT_PARAMETERS ((unsigned) (4))
#define FB_IStatement_PREPARE_PREFETCH_LEGACY_PLAN ((unsigned) (8))
#define FB_IStatement_PREPARE_PREFETCH_DETAILED_PLAN ((unsigned) (16))
#define FB_IStatement_PREPARE_PREFETCH_AFFECTED_RECORDS ((unsigned) (32))
#define FB_IStatement_PREPARE_PREFETCH_FLAGS ((unsigned) (64))
#define FB_IStatement_PREPARE_PREFETCH_METADATA ((unsigned) (FB_IStatement_PREPARE_PREFETCH_TYPE | FB_IStatement_PREPARE_PREFETCH_FLAGS | FB_IStatement_PREPARE_PREFETCH_INPUT_PARAMETERS | FB_IStatement_PREPARE_PREFETCH_OUTPUT_PARAMETERS))
#define FB_IStatement_PREPARE_PREFETCH_ALL ((unsigned) (FB_IStatement_PREPARE_PREFETCH_METADATA | FB_IStatement_PREPARE_PREFETCH_LEGACY_PLAN | FB_IStatement_PREPARE_PREFETCH_DETAILED_PLAN | FB_IStatement_PREPARE_PREFETCH_AFFECTED_RECORDS))
#define FB_IStatement_FLAG_HAS_CURSOR ((unsigned) (1))
#define FB_IStatement_FLAG_REPEAT_EXECUTE ((unsigned) (2))
#define FB_IStatement_CURSOR_TYPE_SCROLLABLE ((unsigned) (1))

struct FB_IStatement;

struct FB_IStatementVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IStatement* self);
	int (*release)(struct FB_IStatement* self);
	void (*getInfo)(struct FB_IStatement* self, struct FB_IStatus* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
	unsigned (*getType)(struct FB_IStatement* self, struct FB_IStatus* status);
	const char* (*getPlan)(struct FB_IStatement* self, struct FB_IStatus* status, FB_BOOLEAN detailed);
	ISC_UINT64 (*getAffectedRecords)(struct FB_IStatement* self, struct FB_IStatus* status);
	struct FB_IMessageMetadata* (*getInputMetadata)(struct FB_IStatement* self, struct FB_IStatus* status);
	struct FB_IMessageMetadata* (*getOutputMetadata)(struct FB_IStatement* self, struct FB_IStatus* status);
	struct FB_ITransaction* (*execute)(struct FB_IStatement* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, struct FB_IMessageMetadata* inMetadata, void* inBuffer, struct FB_IMessageMetadata* outMetadata, void* outBuffer);
	struct FB_IResultSet* (*openCursor)(struct FB_IStatement* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, struct FB_IMessageMetadata* inMetadata, void* inBuffer, struct FB_IMessageMetadata* outMetadata, unsigned flags);
	void (*setCursorName)(struct FB_IStatement* self, struct FB_IStatus* status, const char* name);
	void (*free)(struct FB_IStatement* self, struct FB_IStatus* status);
	unsigned (*getFlags)(struct FB_IStatement* self, struct FB_IStatus* status);
};

struct FB_IStatement
{
	void* cloopDummy[1];
	struct FB_IStatementVTable* vtable;
};

CLOOP_EXTERN_C void FB_IStatement_addRef(struct FB_IStatement* self);
CLOOP_EXTERN_C int FB_IStatement_release(struct FB_IStatement* self);
CLOOP_EXTERN_C void FB_IStatement_getInfo(struct FB_IStatement* self, struct FB_IStatus* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C unsigned FB_IStatement_getType(struct FB_IStatement* self, struct FB_IStatus* status);
CLOOP_EXTERN_C const char* FB_IStatement_getPlan(struct FB_IStatement* self, struct FB_IStatus* status, FB_BOOLEAN detailed);
CLOOP_EXTERN_C ISC_UINT64 FB_IStatement_getAffectedRecords(struct FB_IStatement* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_IMessageMetadata* FB_IStatement_getInputMetadata(struct FB_IStatement* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_IMessageMetadata* FB_IStatement_getOutputMetadata(struct FB_IStatement* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_ITransaction* FB_IStatement_execute(struct FB_IStatement* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, struct FB_IMessageMetadata* inMetadata, void* inBuffer, struct FB_IMessageMetadata* outMetadata, void* outBuffer);
CLOOP_EXTERN_C struct FB_IResultSet* FB_IStatement_openCursor(struct FB_IStatement* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, struct FB_IMessageMetadata* inMetadata, void* inBuffer, struct FB_IMessageMetadata* outMetadata, unsigned flags);
CLOOP_EXTERN_C void FB_IStatement_setCursorName(struct FB_IStatement* self, struct FB_IStatus* status, const char* name);
CLOOP_EXTERN_C void FB_IStatement_free(struct FB_IStatement* self, struct FB_IStatus* status);
CLOOP_EXTERN_C unsigned FB_IStatement_getFlags(struct FB_IStatement* self, struct FB_IStatus* status);

#define FB_IRequest_VERSION 9

struct FB_IRequest;

struct FB_IRequestVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IRequest* self);
	int (*release)(struct FB_IRequest* self);
	void (*receive)(struct FB_IRequest* self, struct FB_IStatus* status, int level, unsigned msgType, unsigned length, unsigned char* message);
	void (*send)(struct FB_IRequest* self, struct FB_IStatus* status, int level, unsigned msgType, unsigned length, const unsigned char* message);
	void (*getInfo)(struct FB_IRequest* self, struct FB_IStatus* status, int level, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
	void (*start)(struct FB_IRequest* self, struct FB_IStatus* status, struct FB_ITransaction* tra, int level);
	void (*startAndSend)(struct FB_IRequest* self, struct FB_IStatus* status, struct FB_ITransaction* tra, int level, unsigned msgType, unsigned length, const unsigned char* message);
	void (*unwind)(struct FB_IRequest* self, struct FB_IStatus* status, int level);
	void (*free)(struct FB_IRequest* self, struct FB_IStatus* status);
};

struct FB_IRequest
{
	void* cloopDummy[1];
	struct FB_IRequestVTable* vtable;
};

CLOOP_EXTERN_C void FB_IRequest_addRef(struct FB_IRequest* self);
CLOOP_EXTERN_C int FB_IRequest_release(struct FB_IRequest* self);
CLOOP_EXTERN_C void FB_IRequest_receive(struct FB_IRequest* self, struct FB_IStatus* status, int level, unsigned msgType, unsigned length, unsigned char* message);
CLOOP_EXTERN_C void FB_IRequest_send(struct FB_IRequest* self, struct FB_IStatus* status, int level, unsigned msgType, unsigned length, const unsigned char* message);
CLOOP_EXTERN_C void FB_IRequest_getInfo(struct FB_IRequest* self, struct FB_IStatus* status, int level, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C void FB_IRequest_start(struct FB_IRequest* self, struct FB_IStatus* status, struct FB_ITransaction* tra, int level);
CLOOP_EXTERN_C void FB_IRequest_startAndSend(struct FB_IRequest* self, struct FB_IStatus* status, struct FB_ITransaction* tra, int level, unsigned msgType, unsigned length, const unsigned char* message);
CLOOP_EXTERN_C void FB_IRequest_unwind(struct FB_IRequest* self, struct FB_IStatus* status, int level);
CLOOP_EXTERN_C void FB_IRequest_free(struct FB_IRequest* self, struct FB_IStatus* status);

#define FB_IEvents_VERSION 3

struct FB_IEvents;

struct FB_IEventsVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IEvents* self);
	int (*release)(struct FB_IEvents* self);
	void (*cancel)(struct FB_IEvents* self, struct FB_IStatus* status);
};

struct FB_IEvents
{
	void* cloopDummy[1];
	struct FB_IEventsVTable* vtable;
};

CLOOP_EXTERN_C void FB_IEvents_addRef(struct FB_IEvents* self);
CLOOP_EXTERN_C int FB_IEvents_release(struct FB_IEvents* self);
CLOOP_EXTERN_C void FB_IEvents_cancel(struct FB_IEvents* self, struct FB_IStatus* status);

#define FB_IAttachment_VERSION 20

struct FB_IAttachment;

struct FB_IAttachmentVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IAttachment* self);
	int (*release)(struct FB_IAttachment* self);
	void (*getInfo)(struct FB_IAttachment* self, struct FB_IStatus* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
	struct FB_ITransaction* (*startTransaction)(struct FB_IAttachment* self, struct FB_IStatus* status, unsigned tpbLength, const unsigned char* tpb);
	struct FB_ITransaction* (*reconnectTransaction)(struct FB_IAttachment* self, struct FB_IStatus* status, unsigned length, const unsigned char* id);
	struct FB_IRequest* (*compileRequest)(struct FB_IAttachment* self, struct FB_IStatus* status, unsigned blrLength, const unsigned char* blr);
	void (*transactRequest)(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, unsigned blrLength, const unsigned char* blr, unsigned inMsgLength, const unsigned char* inMsg, unsigned outMsgLength, unsigned char* outMsg);
	struct FB_IBlob* (*createBlob)(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, ISC_QUAD* id, unsigned bpbLength, const unsigned char* bpb);
	struct FB_IBlob* (*openBlob)(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, ISC_QUAD* id, unsigned bpbLength, const unsigned char* bpb);
	int (*getSlice)(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, ISC_QUAD* id, unsigned sdlLength, const unsigned char* sdl, unsigned paramLength, const unsigned char* param, int sliceLength, unsigned char* slice);
	void (*putSlice)(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, ISC_QUAD* id, unsigned sdlLength, const unsigned char* sdl, unsigned paramLength, const unsigned char* param, int sliceLength, unsigned char* slice);
	void (*executeDyn)(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, unsigned length, const unsigned char* dyn);
	struct FB_IStatement* (*prepare)(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* tra, unsigned stmtLength, const char* sqlStmt, unsigned dialect, unsigned flags);
	struct FB_ITransaction* (*execute)(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, unsigned stmtLength, const char* sqlStmt, unsigned dialect, struct FB_IMessageMetadata* inMetadata, void* inBuffer, struct FB_IMessageMetadata* outMetadata, void* outBuffer);
	struct FB_IResultSet* (*openCursor)(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, unsigned stmtLength, const char* sqlStmt, unsigned dialect, struct FB_IMessageMetadata* inMetadata, void* inBuffer, struct FB_IMessageMetadata* outMetadata, const char* cursorName, unsigned cursorFlags);
	struct FB_IEvents* (*queEvents)(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_IEventCallback* callback, unsigned length, const unsigned char* events);
	void (*cancelOperation)(struct FB_IAttachment* self, struct FB_IStatus* status, int option);
	void (*ping)(struct FB_IAttachment* self, struct FB_IStatus* status);
	void (*detach)(struct FB_IAttachment* self, struct FB_IStatus* status);
	void (*dropDatabase)(struct FB_IAttachment* self, struct FB_IStatus* status);
};

struct FB_IAttachment
{
	void* cloopDummy[1];
	struct FB_IAttachmentVTable* vtable;
};

CLOOP_EXTERN_C void FB_IAttachment_addRef(struct FB_IAttachment* self);
CLOOP_EXTERN_C int FB_IAttachment_release(struct FB_IAttachment* self);
CLOOP_EXTERN_C void FB_IAttachment_getInfo(struct FB_IAttachment* self, struct FB_IStatus* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C struct FB_ITransaction* FB_IAttachment_startTransaction(struct FB_IAttachment* self, struct FB_IStatus* status, unsigned tpbLength, const unsigned char* tpb);
CLOOP_EXTERN_C struct FB_ITransaction* FB_IAttachment_reconnectTransaction(struct FB_IAttachment* self, struct FB_IStatus* status, unsigned length, const unsigned char* id);
CLOOP_EXTERN_C struct FB_IRequest* FB_IAttachment_compileRequest(struct FB_IAttachment* self, struct FB_IStatus* status, unsigned blrLength, const unsigned char* blr);
CLOOP_EXTERN_C void FB_IAttachment_transactRequest(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, unsigned blrLength, const unsigned char* blr, unsigned inMsgLength, const unsigned char* inMsg, unsigned outMsgLength, unsigned char* outMsg);
CLOOP_EXTERN_C struct FB_IBlob* FB_IAttachment_createBlob(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, ISC_QUAD* id, unsigned bpbLength, const unsigned char* bpb);
CLOOP_EXTERN_C struct FB_IBlob* FB_IAttachment_openBlob(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, ISC_QUAD* id, unsigned bpbLength, const unsigned char* bpb);
CLOOP_EXTERN_C int FB_IAttachment_getSlice(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, ISC_QUAD* id, unsigned sdlLength, const unsigned char* sdl, unsigned paramLength, const unsigned char* param, int sliceLength, unsigned char* slice);
CLOOP_EXTERN_C void FB_IAttachment_putSlice(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, ISC_QUAD* id, unsigned sdlLength, const unsigned char* sdl, unsigned paramLength, const unsigned char* param, int sliceLength, unsigned char* slice);
CLOOP_EXTERN_C void FB_IAttachment_executeDyn(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, unsigned length, const unsigned char* dyn);
CLOOP_EXTERN_C struct FB_IStatement* FB_IAttachment_prepare(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* tra, unsigned stmtLength, const char* sqlStmt, unsigned dialect, unsigned flags);
CLOOP_EXTERN_C struct FB_ITransaction* FB_IAttachment_execute(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, unsigned stmtLength, const char* sqlStmt, unsigned dialect, struct FB_IMessageMetadata* inMetadata, void* inBuffer, struct FB_IMessageMetadata* outMetadata, void* outBuffer);
CLOOP_EXTERN_C struct FB_IResultSet* FB_IAttachment_openCursor(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_ITransaction* transaction, unsigned stmtLength, const char* sqlStmt, unsigned dialect, struct FB_IMessageMetadata* inMetadata, void* inBuffer, struct FB_IMessageMetadata* outMetadata, const char* cursorName, unsigned cursorFlags);
CLOOP_EXTERN_C struct FB_IEvents* FB_IAttachment_queEvents(struct FB_IAttachment* self, struct FB_IStatus* status, struct FB_IEventCallback* callback, unsigned length, const unsigned char* events);
CLOOP_EXTERN_C void FB_IAttachment_cancelOperation(struct FB_IAttachment* self, struct FB_IStatus* status, int option);
CLOOP_EXTERN_C void FB_IAttachment_ping(struct FB_IAttachment* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IAttachment_detach(struct FB_IAttachment* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IAttachment_dropDatabase(struct FB_IAttachment* self, struct FB_IStatus* status);

#define FB_IService_VERSION 5

struct FB_IService;

struct FB_IServiceVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IService* self);
	int (*release)(struct FB_IService* self);
	void (*detach)(struct FB_IService* self, struct FB_IStatus* status);
	void (*query)(struct FB_IService* self, struct FB_IStatus* status, unsigned sendLength, const unsigned char* sendItems, unsigned receiveLength, const unsigned char* receiveItems, unsigned bufferLength, unsigned char* buffer);
	void (*start)(struct FB_IService* self, struct FB_IStatus* status, unsigned spbLength, const unsigned char* spb);
};

struct FB_IService
{
	void* cloopDummy[1];
	struct FB_IServiceVTable* vtable;
};

CLOOP_EXTERN_C void FB_IService_addRef(struct FB_IService* self);
CLOOP_EXTERN_C int FB_IService_release(struct FB_IService* self);
CLOOP_EXTERN_C void FB_IService_detach(struct FB_IService* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IService_query(struct FB_IService* self, struct FB_IStatus* status, unsigned sendLength, const unsigned char* sendItems, unsigned receiveLength, const unsigned char* receiveItems, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C void FB_IService_start(struct FB_IService* self, struct FB_IStatus* status, unsigned spbLength, const unsigned char* spb);

#define FB_IProvider_VERSION 9

struct FB_IProvider;

struct FB_IProviderVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IProvider* self);
	int (*release)(struct FB_IProvider* self);
	void (*setOwner)(struct FB_IProvider* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_IProvider* self);
	struct FB_IAttachment* (*attachDatabase)(struct FB_IProvider* self, struct FB_IStatus* status, const char* fileName, unsigned dpbLength, const unsigned char* dpb);
	struct FB_IAttachment* (*createDatabase)(struct FB_IProvider* self, struct FB_IStatus* status, const char* fileName, unsigned dpbLength, const unsigned char* dpb);
	struct FB_IService* (*attachServiceManager)(struct FB_IProvider* self, struct FB_IStatus* status, const char* service, unsigned spbLength, const unsigned char* spb);
	void (*shutdown)(struct FB_IProvider* self, struct FB_IStatus* status, unsigned timeout, const int reason);
	void (*setDbCryptCallback)(struct FB_IProvider* self, struct FB_IStatus* status, struct FB_ICryptKeyCallback* cryptCallback);
};

struct FB_IProvider
{
	void* cloopDummy[1];
	struct FB_IProviderVTable* vtable;
};

CLOOP_EXTERN_C void FB_IProvider_addRef(struct FB_IProvider* self);
CLOOP_EXTERN_C int FB_IProvider_release(struct FB_IProvider* self);
CLOOP_EXTERN_C void FB_IProvider_setOwner(struct FB_IProvider* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_IProvider_getOwner(struct FB_IProvider* self);
CLOOP_EXTERN_C struct FB_IAttachment* FB_IProvider_attachDatabase(struct FB_IProvider* self, struct FB_IStatus* status, const char* fileName, unsigned dpbLength, const unsigned char* dpb);
CLOOP_EXTERN_C struct FB_IAttachment* FB_IProvider_createDatabase(struct FB_IProvider* self, struct FB_IStatus* status, const char* fileName, unsigned dpbLength, const unsigned char* dpb);
CLOOP_EXTERN_C struct FB_IService* FB_IProvider_attachServiceManager(struct FB_IProvider* self, struct FB_IStatus* status, const char* service, unsigned spbLength, const unsigned char* spb);
CLOOP_EXTERN_C void FB_IProvider_shutdown(struct FB_IProvider* self, struct FB_IStatus* status, unsigned timeout, const int reason);
CLOOP_EXTERN_C void FB_IProvider_setDbCryptCallback(struct FB_IProvider* self, struct FB_IStatus* status, struct FB_ICryptKeyCallback* cryptCallback);

#define FB_IDtcStart_VERSION 4

struct FB_IDtcStart;

struct FB_IDtcStartVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IDtcStart* self);
	void (*addAttachment)(struct FB_IDtcStart* self, struct FB_IStatus* status, struct FB_IAttachment* att);
	void (*addWithTpb)(struct FB_IDtcStart* self, struct FB_IStatus* status, struct FB_IAttachment* att, unsigned length, const unsigned char* tpb);
	struct FB_ITransaction* (*start)(struct FB_IDtcStart* self, struct FB_IStatus* status);
};

struct FB_IDtcStart
{
	void* cloopDummy[1];
	struct FB_IDtcStartVTable* vtable;
};

CLOOP_EXTERN_C void FB_IDtcStart_dispose(struct FB_IDtcStart* self);
CLOOP_EXTERN_C void FB_IDtcStart_addAttachment(struct FB_IDtcStart* self, struct FB_IStatus* status, struct FB_IAttachment* att);
CLOOP_EXTERN_C void FB_IDtcStart_addWithTpb(struct FB_IDtcStart* self, struct FB_IStatus* status, struct FB_IAttachment* att, unsigned length, const unsigned char* tpb);
CLOOP_EXTERN_C struct FB_ITransaction* FB_IDtcStart_start(struct FB_IDtcStart* self, struct FB_IStatus* status);

#define FB_IDtc_VERSION 2

struct FB_IDtc;

struct FB_IDtcVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	struct FB_ITransaction* (*join)(struct FB_IDtc* self, struct FB_IStatus* status, struct FB_ITransaction* one, struct FB_ITransaction* two);
	struct FB_IDtcStart* (*startBuilder)(struct FB_IDtc* self, struct FB_IStatus* status);
};

struct FB_IDtc
{
	void* cloopDummy[1];
	struct FB_IDtcVTable* vtable;
};

CLOOP_EXTERN_C struct FB_ITransaction* FB_IDtc_join(struct FB_IDtc* self, struct FB_IStatus* status, struct FB_ITransaction* one, struct FB_ITransaction* two);
CLOOP_EXTERN_C struct FB_IDtcStart* FB_IDtc_startBuilder(struct FB_IDtc* self, struct FB_IStatus* status);

#define FB_IAuth_VERSION 4

#define FB_IAuth_AUTH_FAILED ((int) (-1))
#define FB_IAuth_AUTH_SUCCESS ((int) (0))
#define FB_IAuth_AUTH_MORE_DATA ((int) (1))
#define FB_IAuth_AUTH_CONTINUE ((int) (2))

struct FB_IAuth;

struct FB_IAuthVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IAuth* self);
	int (*release)(struct FB_IAuth* self);
	void (*setOwner)(struct FB_IAuth* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_IAuth* self);
};

struct FB_IAuth
{
	void* cloopDummy[1];
	struct FB_IAuthVTable* vtable;
};

CLOOP_EXTERN_C void FB_IAuth_addRef(struct FB_IAuth* self);
CLOOP_EXTERN_C int FB_IAuth_release(struct FB_IAuth* self);
CLOOP_EXTERN_C void FB_IAuth_setOwner(struct FB_IAuth* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_IAuth_getOwner(struct FB_IAuth* self);

#define FB_IWriter_VERSION 4

struct FB_IWriter;

struct FB_IWriterVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*reset)(struct FB_IWriter* self);
	void (*add)(struct FB_IWriter* self, struct FB_IStatus* status, const char* name);
	void (*setType)(struct FB_IWriter* self, struct FB_IStatus* status, const char* value);
	void (*setDb)(struct FB_IWriter* self, struct FB_IStatus* status, const char* value);
};

struct FB_IWriter
{
	void* cloopDummy[1];
	struct FB_IWriterVTable* vtable;
};

CLOOP_EXTERN_C void FB_IWriter_reset(struct FB_IWriter* self);
CLOOP_EXTERN_C void FB_IWriter_add(struct FB_IWriter* self, struct FB_IStatus* status, const char* name);
CLOOP_EXTERN_C void FB_IWriter_setType(struct FB_IWriter* self, struct FB_IStatus* status, const char* value);
CLOOP_EXTERN_C void FB_IWriter_setDb(struct FB_IWriter* self, struct FB_IStatus* status, const char* value);

#define FB_IServerBlock_VERSION 4

struct FB_IServerBlock;

struct FB_IServerBlockVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getLogin)(struct FB_IServerBlock* self);
	const unsigned char* (*getData)(struct FB_IServerBlock* self, unsigned* length);
	void (*putData)(struct FB_IServerBlock* self, struct FB_IStatus* status, unsigned length, const void* data);
	struct FB_ICryptKey* (*newKey)(struct FB_IServerBlock* self, struct FB_IStatus* status);
};

struct FB_IServerBlock
{
	void* cloopDummy[1];
	struct FB_IServerBlockVTable* vtable;
};

CLOOP_EXTERN_C const char* FB_IServerBlock_getLogin(struct FB_IServerBlock* self);
CLOOP_EXTERN_C const unsigned char* FB_IServerBlock_getData(struct FB_IServerBlock* self, unsigned* length);
CLOOP_EXTERN_C void FB_IServerBlock_putData(struct FB_IServerBlock* self, struct FB_IStatus* status, unsigned length, const void* data);
CLOOP_EXTERN_C struct FB_ICryptKey* FB_IServerBlock_newKey(struct FB_IServerBlock* self, struct FB_IStatus* status);

#define FB_IClientBlock_VERSION 7

struct FB_IClientBlock;

struct FB_IClientBlockVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IClientBlock* self);
	int (*release)(struct FB_IClientBlock* self);
	const char* (*getLogin)(struct FB_IClientBlock* self);
	const char* (*getPassword)(struct FB_IClientBlock* self);
	const unsigned char* (*getData)(struct FB_IClientBlock* self, unsigned* length);
	void (*putData)(struct FB_IClientBlock* self, struct FB_IStatus* status, unsigned length, const void* data);
	struct FB_ICryptKey* (*newKey)(struct FB_IClientBlock* self, struct FB_IStatus* status);
};

struct FB_IClientBlock
{
	void* cloopDummy[1];
	struct FB_IClientBlockVTable* vtable;
};

CLOOP_EXTERN_C void FB_IClientBlock_addRef(struct FB_IClientBlock* self);
CLOOP_EXTERN_C int FB_IClientBlock_release(struct FB_IClientBlock* self);
CLOOP_EXTERN_C const char* FB_IClientBlock_getLogin(struct FB_IClientBlock* self);
CLOOP_EXTERN_C const char* FB_IClientBlock_getPassword(struct FB_IClientBlock* self);
CLOOP_EXTERN_C const unsigned char* FB_IClientBlock_getData(struct FB_IClientBlock* self, unsigned* length);
CLOOP_EXTERN_C void FB_IClientBlock_putData(struct FB_IClientBlock* self, struct FB_IStatus* status, unsigned length, const void* data);
CLOOP_EXTERN_C struct FB_ICryptKey* FB_IClientBlock_newKey(struct FB_IClientBlock* self, struct FB_IStatus* status);

#define FB_IServer_VERSION 5

struct FB_IServer;

struct FB_IServerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IServer* self);
	int (*release)(struct FB_IServer* self);
	void (*setOwner)(struct FB_IServer* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_IServer* self);
	int (*authenticate)(struct FB_IServer* self, struct FB_IStatus* status, struct FB_IServerBlock* sBlock, struct FB_IWriter* writerInterface);
};

struct FB_IServer
{
	void* cloopDummy[1];
	struct FB_IServerVTable* vtable;
};

CLOOP_EXTERN_C void FB_IServer_addRef(struct FB_IServer* self);
CLOOP_EXTERN_C int FB_IServer_release(struct FB_IServer* self);
CLOOP_EXTERN_C void FB_IServer_setOwner(struct FB_IServer* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_IServer_getOwner(struct FB_IServer* self);
CLOOP_EXTERN_C int FB_IServer_authenticate(struct FB_IServer* self, struct FB_IStatus* status, struct FB_IServerBlock* sBlock, struct FB_IWriter* writerInterface);

#define FB_IClient_VERSION 5

struct FB_IClient;

struct FB_IClientVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IClient* self);
	int (*release)(struct FB_IClient* self);
	void (*setOwner)(struct FB_IClient* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_IClient* self);
	int (*authenticate)(struct FB_IClient* self, struct FB_IStatus* status, struct FB_IClientBlock* cBlock);
};

struct FB_IClient
{
	void* cloopDummy[1];
	struct FB_IClientVTable* vtable;
};

CLOOP_EXTERN_C void FB_IClient_addRef(struct FB_IClient* self);
CLOOP_EXTERN_C int FB_IClient_release(struct FB_IClient* self);
CLOOP_EXTERN_C void FB_IClient_setOwner(struct FB_IClient* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_IClient_getOwner(struct FB_IClient* self);
CLOOP_EXTERN_C int FB_IClient_authenticate(struct FB_IClient* self, struct FB_IStatus* status, struct FB_IClientBlock* cBlock);

#define FB_IUserField_VERSION 3

struct FB_IUserField;

struct FB_IUserFieldVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	int (*entered)(struct FB_IUserField* self);
	int (*specified)(struct FB_IUserField* self);
	void (*setEntered)(struct FB_IUserField* self, struct FB_IStatus* status, int newValue);
};

struct FB_IUserField
{
	void* cloopDummy[1];
	struct FB_IUserFieldVTable* vtable;
};

CLOOP_EXTERN_C int FB_IUserField_entered(struct FB_IUserField* self);
CLOOP_EXTERN_C int FB_IUserField_specified(struct FB_IUserField* self);
CLOOP_EXTERN_C void FB_IUserField_setEntered(struct FB_IUserField* self, struct FB_IStatus* status, int newValue);

#define FB_ICharUserField_VERSION 5

struct FB_ICharUserField;

struct FB_ICharUserFieldVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	int (*entered)(struct FB_ICharUserField* self);
	int (*specified)(struct FB_ICharUserField* self);
	void (*setEntered)(struct FB_ICharUserField* self, struct FB_IStatus* status, int newValue);
	const char* (*get)(struct FB_ICharUserField* self);
	void (*set)(struct FB_ICharUserField* self, struct FB_IStatus* status, const char* newValue);
};

struct FB_ICharUserField
{
	void* cloopDummy[1];
	struct FB_ICharUserFieldVTable* vtable;
};

CLOOP_EXTERN_C int FB_ICharUserField_entered(struct FB_ICharUserField* self);
CLOOP_EXTERN_C int FB_ICharUserField_specified(struct FB_ICharUserField* self);
CLOOP_EXTERN_C void FB_ICharUserField_setEntered(struct FB_ICharUserField* self, struct FB_IStatus* status, int newValue);
CLOOP_EXTERN_C const char* FB_ICharUserField_get(struct FB_ICharUserField* self);
CLOOP_EXTERN_C void FB_ICharUserField_set(struct FB_ICharUserField* self, struct FB_IStatus* status, const char* newValue);

#define FB_IIntUserField_VERSION 5

struct FB_IIntUserField;

struct FB_IIntUserFieldVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	int (*entered)(struct FB_IIntUserField* self);
	int (*specified)(struct FB_IIntUserField* self);
	void (*setEntered)(struct FB_IIntUserField* self, struct FB_IStatus* status, int newValue);
	int (*get)(struct FB_IIntUserField* self);
	void (*set)(struct FB_IIntUserField* self, struct FB_IStatus* status, int newValue);
};

struct FB_IIntUserField
{
	void* cloopDummy[1];
	struct FB_IIntUserFieldVTable* vtable;
};

CLOOP_EXTERN_C int FB_IIntUserField_entered(struct FB_IIntUserField* self);
CLOOP_EXTERN_C int FB_IIntUserField_specified(struct FB_IIntUserField* self);
CLOOP_EXTERN_C void FB_IIntUserField_setEntered(struct FB_IIntUserField* self, struct FB_IStatus* status, int newValue);
CLOOP_EXTERN_C int FB_IIntUserField_get(struct FB_IIntUserField* self);
CLOOP_EXTERN_C void FB_IIntUserField_set(struct FB_IIntUserField* self, struct FB_IStatus* status, int newValue);

#define FB_IUser_VERSION 11

struct FB_IUser;

struct FB_IUserVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	int (*operation)(struct FB_IUser* self);
	struct FB_ICharUserField* (*userName)(struct FB_IUser* self);
	struct FB_ICharUserField* (*password)(struct FB_IUser* self);
	struct FB_ICharUserField* (*firstName)(struct FB_IUser* self);
	struct FB_ICharUserField* (*lastName)(struct FB_IUser* self);
	struct FB_ICharUserField* (*middleName)(struct FB_IUser* self);
	struct FB_ICharUserField* (*comment)(struct FB_IUser* self);
	struct FB_ICharUserField* (*attributes)(struct FB_IUser* self);
	struct FB_IIntUserField* (*active)(struct FB_IUser* self);
	struct FB_IIntUserField* (*admin)(struct FB_IUser* self);
	void (*clear)(struct FB_IUser* self, struct FB_IStatus* status);
};

struct FB_IUser
{
	void* cloopDummy[1];
	struct FB_IUserVTable* vtable;
};

CLOOP_EXTERN_C int FB_IUser_operation(struct FB_IUser* self);
CLOOP_EXTERN_C struct FB_ICharUserField* FB_IUser_userName(struct FB_IUser* self);
CLOOP_EXTERN_C struct FB_ICharUserField* FB_IUser_password(struct FB_IUser* self);
CLOOP_EXTERN_C struct FB_ICharUserField* FB_IUser_firstName(struct FB_IUser* self);
CLOOP_EXTERN_C struct FB_ICharUserField* FB_IUser_lastName(struct FB_IUser* self);
CLOOP_EXTERN_C struct FB_ICharUserField* FB_IUser_middleName(struct FB_IUser* self);
CLOOP_EXTERN_C struct FB_ICharUserField* FB_IUser_comment(struct FB_IUser* self);
CLOOP_EXTERN_C struct FB_ICharUserField* FB_IUser_attributes(struct FB_IUser* self);
CLOOP_EXTERN_C struct FB_IIntUserField* FB_IUser_active(struct FB_IUser* self);
CLOOP_EXTERN_C struct FB_IIntUserField* FB_IUser_admin(struct FB_IUser* self);
CLOOP_EXTERN_C void FB_IUser_clear(struct FB_IUser* self, struct FB_IStatus* status);

#define FB_IListUsers_VERSION 1

struct FB_IListUsers;

struct FB_IListUsersVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*list)(struct FB_IListUsers* self, struct FB_IStatus* status, struct FB_IUser* user);
};

struct FB_IListUsers
{
	void* cloopDummy[1];
	struct FB_IListUsersVTable* vtable;
};

CLOOP_EXTERN_C void FB_IListUsers_list(struct FB_IListUsers* self, struct FB_IStatus* status, struct FB_IUser* user);

#define FB_ILogonInfo_VERSION 5

struct FB_ILogonInfo;

struct FB_ILogonInfoVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*name)(struct FB_ILogonInfo* self);
	const char* (*role)(struct FB_ILogonInfo* self);
	const char* (*networkProtocol)(struct FB_ILogonInfo* self);
	const char* (*remoteAddress)(struct FB_ILogonInfo* self);
	const unsigned char* (*authBlock)(struct FB_ILogonInfo* self, unsigned* length);
};

struct FB_ILogonInfo
{
	void* cloopDummy[1];
	struct FB_ILogonInfoVTable* vtable;
};

CLOOP_EXTERN_C const char* FB_ILogonInfo_name(struct FB_ILogonInfo* self);
CLOOP_EXTERN_C const char* FB_ILogonInfo_role(struct FB_ILogonInfo* self);
CLOOP_EXTERN_C const char* FB_ILogonInfo_networkProtocol(struct FB_ILogonInfo* self);
CLOOP_EXTERN_C const char* FB_ILogonInfo_remoteAddress(struct FB_ILogonInfo* self);
CLOOP_EXTERN_C const unsigned char* FB_ILogonInfo_authBlock(struct FB_ILogonInfo* self, unsigned* length);

#define FB_IManagement_VERSION 8

struct FB_IManagement;

struct FB_IManagementVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IManagement* self);
	int (*release)(struct FB_IManagement* self);
	void (*setOwner)(struct FB_IManagement* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_IManagement* self);
	void (*start)(struct FB_IManagement* self, struct FB_IStatus* status, struct FB_ILogonInfo* logonInfo);
	int (*execute)(struct FB_IManagement* self, struct FB_IStatus* status, struct FB_IUser* user, struct FB_IListUsers* callback);
	void (*commit)(struct FB_IManagement* self, struct FB_IStatus* status);
	void (*rollback)(struct FB_IManagement* self, struct FB_IStatus* status);
};

struct FB_IManagement
{
	void* cloopDummy[1];
	struct FB_IManagementVTable* vtable;
};

CLOOP_EXTERN_C void FB_IManagement_addRef(struct FB_IManagement* self);
CLOOP_EXTERN_C int FB_IManagement_release(struct FB_IManagement* self);
CLOOP_EXTERN_C void FB_IManagement_setOwner(struct FB_IManagement* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_IManagement_getOwner(struct FB_IManagement* self);
CLOOP_EXTERN_C void FB_IManagement_start(struct FB_IManagement* self, struct FB_IStatus* status, struct FB_ILogonInfo* logonInfo);
CLOOP_EXTERN_C int FB_IManagement_execute(struct FB_IManagement* self, struct FB_IStatus* status, struct FB_IUser* user, struct FB_IListUsers* callback);
CLOOP_EXTERN_C void FB_IManagement_commit(struct FB_IManagement* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IManagement_rollback(struct FB_IManagement* self, struct FB_IStatus* status);

#define FB_IWireCryptPlugin_VERSION 8

struct FB_IWireCryptPlugin;

struct FB_IWireCryptPluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IWireCryptPlugin* self);
	int (*release)(struct FB_IWireCryptPlugin* self);
	void (*setOwner)(struct FB_IWireCryptPlugin* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_IWireCryptPlugin* self);
	const char* (*getKnownTypes)(struct FB_IWireCryptPlugin* self, struct FB_IStatus* status);
	void (*setKey)(struct FB_IWireCryptPlugin* self, struct FB_IStatus* status, struct FB_ICryptKey* key);
	void (*encrypt)(struct FB_IWireCryptPlugin* self, struct FB_IStatus* status, unsigned length, const void* from, void* to);
	void (*decrypt)(struct FB_IWireCryptPlugin* self, struct FB_IStatus* status, unsigned length, const void* from, void* to);
};

struct FB_IWireCryptPlugin
{
	void* cloopDummy[1];
	struct FB_IWireCryptPluginVTable* vtable;
};

CLOOP_EXTERN_C void FB_IWireCryptPlugin_addRef(struct FB_IWireCryptPlugin* self);
CLOOP_EXTERN_C int FB_IWireCryptPlugin_release(struct FB_IWireCryptPlugin* self);
CLOOP_EXTERN_C void FB_IWireCryptPlugin_setOwner(struct FB_IWireCryptPlugin* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_IWireCryptPlugin_getOwner(struct FB_IWireCryptPlugin* self);
CLOOP_EXTERN_C const char* FB_IWireCryptPlugin_getKnownTypes(struct FB_IWireCryptPlugin* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IWireCryptPlugin_setKey(struct FB_IWireCryptPlugin* self, struct FB_IStatus* status, struct FB_ICryptKey* key);
CLOOP_EXTERN_C void FB_IWireCryptPlugin_encrypt(struct FB_IWireCryptPlugin* self, struct FB_IStatus* status, unsigned length, const void* from, void* to);
CLOOP_EXTERN_C void FB_IWireCryptPlugin_decrypt(struct FB_IWireCryptPlugin* self, struct FB_IStatus* status, unsigned length, const void* from, void* to);

#define FB_ICryptKeyCallback_VERSION 1

struct FB_ICryptKeyCallback;

struct FB_ICryptKeyCallbackVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*callback)(struct FB_ICryptKeyCallback* self, unsigned dataLength, const void* data, unsigned bufferLength, void* buffer);
};

struct FB_ICryptKeyCallback
{
	void* cloopDummy[1];
	struct FB_ICryptKeyCallbackVTable* vtable;
};

CLOOP_EXTERN_C unsigned FB_ICryptKeyCallback_callback(struct FB_ICryptKeyCallback* self, unsigned dataLength, const void* data, unsigned bufferLength, void* buffer);

#define FB_IKeyHolderPlugin_VERSION 6

struct FB_IKeyHolderPlugin;

struct FB_IKeyHolderPluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IKeyHolderPlugin* self);
	int (*release)(struct FB_IKeyHolderPlugin* self);
	void (*setOwner)(struct FB_IKeyHolderPlugin* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_IKeyHolderPlugin* self);
	int (*keyCallback)(struct FB_IKeyHolderPlugin* self, struct FB_IStatus* status, struct FB_ICryptKeyCallback* callback);
	struct FB_ICryptKeyCallback* (*keyHandle)(struct FB_IKeyHolderPlugin* self, struct FB_IStatus* status, const char* keyName);
};

struct FB_IKeyHolderPlugin
{
	void* cloopDummy[1];
	struct FB_IKeyHolderPluginVTable* vtable;
};

CLOOP_EXTERN_C void FB_IKeyHolderPlugin_addRef(struct FB_IKeyHolderPlugin* self);
CLOOP_EXTERN_C int FB_IKeyHolderPlugin_release(struct FB_IKeyHolderPlugin* self);
CLOOP_EXTERN_C void FB_IKeyHolderPlugin_setOwner(struct FB_IKeyHolderPlugin* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_IKeyHolderPlugin_getOwner(struct FB_IKeyHolderPlugin* self);
CLOOP_EXTERN_C int FB_IKeyHolderPlugin_keyCallback(struct FB_IKeyHolderPlugin* self, struct FB_IStatus* status, struct FB_ICryptKeyCallback* callback);
CLOOP_EXTERN_C struct FB_ICryptKeyCallback* FB_IKeyHolderPlugin_keyHandle(struct FB_IKeyHolderPlugin* self, struct FB_IStatus* status, const char* keyName);

#define FB_IDbCryptPlugin_VERSION 7

struct FB_IDbCryptPlugin;

struct FB_IDbCryptPluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IDbCryptPlugin* self);
	int (*release)(struct FB_IDbCryptPlugin* self);
	void (*setOwner)(struct FB_IDbCryptPlugin* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_IDbCryptPlugin* self);
	void (*setKey)(struct FB_IDbCryptPlugin* self, struct FB_IStatus* status, unsigned length, struct FB_IKeyHolderPlugin** sources);
	void (*encrypt)(struct FB_IDbCryptPlugin* self, struct FB_IStatus* status, unsigned length, const void* from, void* to);
	void (*decrypt)(struct FB_IDbCryptPlugin* self, struct FB_IStatus* status, unsigned length, const void* from, void* to);
};

struct FB_IDbCryptPlugin
{
	void* cloopDummy[1];
	struct FB_IDbCryptPluginVTable* vtable;
};

CLOOP_EXTERN_C void FB_IDbCryptPlugin_addRef(struct FB_IDbCryptPlugin* self);
CLOOP_EXTERN_C int FB_IDbCryptPlugin_release(struct FB_IDbCryptPlugin* self);
CLOOP_EXTERN_C void FB_IDbCryptPlugin_setOwner(struct FB_IDbCryptPlugin* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_IDbCryptPlugin_getOwner(struct FB_IDbCryptPlugin* self);
CLOOP_EXTERN_C void FB_IDbCryptPlugin_setKey(struct FB_IDbCryptPlugin* self, struct FB_IStatus* status, unsigned length, struct FB_IKeyHolderPlugin** sources);
CLOOP_EXTERN_C void FB_IDbCryptPlugin_encrypt(struct FB_IDbCryptPlugin* self, struct FB_IStatus* status, unsigned length, const void* from, void* to);
CLOOP_EXTERN_C void FB_IDbCryptPlugin_decrypt(struct FB_IDbCryptPlugin* self, struct FB_IStatus* status, unsigned length, const void* from, void* to);

#define FB_IExternalContext_VERSION 10

struct FB_IExternalContext;

struct FB_IExternalContextVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	struct FB_IMaster* (*getMaster)(struct FB_IExternalContext* self);
	struct FB_IExternalEngine* (*getEngine)(struct FB_IExternalContext* self, struct FB_IStatus* status);
	struct FB_IAttachment* (*getAttachment)(struct FB_IExternalContext* self, struct FB_IStatus* status);
	struct FB_ITransaction* (*getTransaction)(struct FB_IExternalContext* self, struct FB_IStatus* status);
	const char* (*getUserName)(struct FB_IExternalContext* self);
	const char* (*getDatabaseName)(struct FB_IExternalContext* self);
	const char* (*getClientCharSet)(struct FB_IExternalContext* self);
	int (*obtainInfoCode)(struct FB_IExternalContext* self);
	void* (*getInfo)(struct FB_IExternalContext* self, int code);
	void* (*setInfo)(struct FB_IExternalContext* self, int code, void* value);
};

struct FB_IExternalContext
{
	void* cloopDummy[1];
	struct FB_IExternalContextVTable* vtable;
};

CLOOP_EXTERN_C struct FB_IMaster* FB_IExternalContext_getMaster(struct FB_IExternalContext* self);
CLOOP_EXTERN_C struct FB_IExternalEngine* FB_IExternalContext_getEngine(struct FB_IExternalContext* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_IAttachment* FB_IExternalContext_getAttachment(struct FB_IExternalContext* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_ITransaction* FB_IExternalContext_getTransaction(struct FB_IExternalContext* self, struct FB_IStatus* status);
CLOOP_EXTERN_C const char* FB_IExternalContext_getUserName(struct FB_IExternalContext* self);
CLOOP_EXTERN_C const char* FB_IExternalContext_getDatabaseName(struct FB_IExternalContext* self);
CLOOP_EXTERN_C const char* FB_IExternalContext_getClientCharSet(struct FB_IExternalContext* self);
CLOOP_EXTERN_C int FB_IExternalContext_obtainInfoCode(struct FB_IExternalContext* self);
CLOOP_EXTERN_C void* FB_IExternalContext_getInfo(struct FB_IExternalContext* self, int code);
CLOOP_EXTERN_C void* FB_IExternalContext_setInfo(struct FB_IExternalContext* self, int code, void* value);

#define FB_IExternalResultSet_VERSION 2

struct FB_IExternalResultSet;

struct FB_IExternalResultSetVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IExternalResultSet* self);
	FB_BOOLEAN (*fetch)(struct FB_IExternalResultSet* self, struct FB_IStatus* status);
};

struct FB_IExternalResultSet
{
	void* cloopDummy[1];
	struct FB_IExternalResultSetVTable* vtable;
};

CLOOP_EXTERN_C void FB_IExternalResultSet_dispose(struct FB_IExternalResultSet* self);
CLOOP_EXTERN_C FB_BOOLEAN FB_IExternalResultSet_fetch(struct FB_IExternalResultSet* self, struct FB_IStatus* status);

#define FB_IExternalFunction_VERSION 3

struct FB_IExternalFunction;

struct FB_IExternalFunctionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IExternalFunction* self);
	void (*getCharSet)(struct FB_IExternalFunction* self, struct FB_IStatus* status, struct FB_IExternalContext* context, char* name, unsigned nameSize);
	void (*execute)(struct FB_IExternalFunction* self, struct FB_IStatus* status, struct FB_IExternalContext* context, void* inMsg, void* outMsg);
};

struct FB_IExternalFunction
{
	void* cloopDummy[1];
	struct FB_IExternalFunctionVTable* vtable;
};

CLOOP_EXTERN_C void FB_IExternalFunction_dispose(struct FB_IExternalFunction* self);
CLOOP_EXTERN_C void FB_IExternalFunction_getCharSet(struct FB_IExternalFunction* self, struct FB_IStatus* status, struct FB_IExternalContext* context, char* name, unsigned nameSize);
CLOOP_EXTERN_C void FB_IExternalFunction_execute(struct FB_IExternalFunction* self, struct FB_IStatus* status, struct FB_IExternalContext* context, void* inMsg, void* outMsg);

#define FB_IExternalProcedure_VERSION 3

struct FB_IExternalProcedure;

struct FB_IExternalProcedureVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IExternalProcedure* self);
	void (*getCharSet)(struct FB_IExternalProcedure* self, struct FB_IStatus* status, struct FB_IExternalContext* context, char* name, unsigned nameSize);
	struct FB_IExternalResultSet* (*open)(struct FB_IExternalProcedure* self, struct FB_IStatus* status, struct FB_IExternalContext* context, void* inMsg, void* outMsg);
};

struct FB_IExternalProcedure
{
	void* cloopDummy[1];
	struct FB_IExternalProcedureVTable* vtable;
};

CLOOP_EXTERN_C void FB_IExternalProcedure_dispose(struct FB_IExternalProcedure* self);
CLOOP_EXTERN_C void FB_IExternalProcedure_getCharSet(struct FB_IExternalProcedure* self, struct FB_IStatus* status, struct FB_IExternalContext* context, char* name, unsigned nameSize);
CLOOP_EXTERN_C struct FB_IExternalResultSet* FB_IExternalProcedure_open(struct FB_IExternalProcedure* self, struct FB_IStatus* status, struct FB_IExternalContext* context, void* inMsg, void* outMsg);

#define FB_IExternalTrigger_VERSION 3

#define FB_IExternalTrigger_TYPE_BEFORE ((unsigned) (1))
#define FB_IExternalTrigger_TYPE_AFTER ((unsigned) (2))
#define FB_IExternalTrigger_TYPE_DATABASE ((unsigned) (3))
#define FB_IExternalTrigger_ACTION_INSERT ((unsigned) (1))
#define FB_IExternalTrigger_ACTION_UPDATE ((unsigned) (2))
#define FB_IExternalTrigger_ACTION_DELETE ((unsigned) (3))
#define FB_IExternalTrigger_ACTION_CONNECT ((unsigned) (4))
#define FB_IExternalTrigger_ACTION_DISCONNECT ((unsigned) (5))
#define FB_IExternalTrigger_ACTION_TRANS_START ((unsigned) (6))
#define FB_IExternalTrigger_ACTION_TRANS_COMMIT ((unsigned) (7))
#define FB_IExternalTrigger_ACTION_TRANS_ROLLBACK ((unsigned) (8))
#define FB_IExternalTrigger_ACTION_DDL ((unsigned) (9))

struct FB_IExternalTrigger;

struct FB_IExternalTriggerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IExternalTrigger* self);
	void (*getCharSet)(struct FB_IExternalTrigger* self, struct FB_IStatus* status, struct FB_IExternalContext* context, char* name, unsigned nameSize);
	void (*execute)(struct FB_IExternalTrigger* self, struct FB_IStatus* status, struct FB_IExternalContext* context, unsigned action, void* oldMsg, void* newMsg);
};

struct FB_IExternalTrigger
{
	void* cloopDummy[1];
	struct FB_IExternalTriggerVTable* vtable;
};

CLOOP_EXTERN_C void FB_IExternalTrigger_dispose(struct FB_IExternalTrigger* self);
CLOOP_EXTERN_C void FB_IExternalTrigger_getCharSet(struct FB_IExternalTrigger* self, struct FB_IStatus* status, struct FB_IExternalContext* context, char* name, unsigned nameSize);
CLOOP_EXTERN_C void FB_IExternalTrigger_execute(struct FB_IExternalTrigger* self, struct FB_IStatus* status, struct FB_IExternalContext* context, unsigned action, void* oldMsg, void* newMsg);

#define FB_IRoutineMetadata_VERSION 9

struct FB_IRoutineMetadata;

struct FB_IRoutineMetadataVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getPackage)(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
	const char* (*getName)(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
	const char* (*getEntryPoint)(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
	const char* (*getBody)(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
	struct FB_IMessageMetadata* (*getInputMetadata)(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
	struct FB_IMessageMetadata* (*getOutputMetadata)(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
	struct FB_IMessageMetadata* (*getTriggerMetadata)(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
	const char* (*getTriggerTable)(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
	unsigned (*getTriggerType)(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
};

struct FB_IRoutineMetadata
{
	void* cloopDummy[1];
	struct FB_IRoutineMetadataVTable* vtable;
};

CLOOP_EXTERN_C const char* FB_IRoutineMetadata_getPackage(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
CLOOP_EXTERN_C const char* FB_IRoutineMetadata_getName(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
CLOOP_EXTERN_C const char* FB_IRoutineMetadata_getEntryPoint(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
CLOOP_EXTERN_C const char* FB_IRoutineMetadata_getBody(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_IMessageMetadata* FB_IRoutineMetadata_getInputMetadata(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_IMessageMetadata* FB_IRoutineMetadata_getOutputMetadata(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
CLOOP_EXTERN_C struct FB_IMessageMetadata* FB_IRoutineMetadata_getTriggerMetadata(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
CLOOP_EXTERN_C const char* FB_IRoutineMetadata_getTriggerTable(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);
CLOOP_EXTERN_C unsigned FB_IRoutineMetadata_getTriggerType(const struct FB_IRoutineMetadata* self, struct FB_IStatus* status);

#define FB_IExternalEngine_VERSION 10

struct FB_IExternalEngine;

struct FB_IExternalEngineVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_IExternalEngine* self);
	int (*release)(struct FB_IExternalEngine* self);
	void (*setOwner)(struct FB_IExternalEngine* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_IExternalEngine* self);
	void (*open)(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context, char* charSet, unsigned charSetSize);
	void (*openAttachment)(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context);
	void (*closeAttachment)(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context);
	struct FB_IExternalFunction* (*makeFunction)(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* inBuilder, struct FB_IMetadataBuilder* outBuilder);
	struct FB_IExternalProcedure* (*makeProcedure)(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* inBuilder, struct FB_IMetadataBuilder* outBuilder);
	struct FB_IExternalTrigger* (*makeTrigger)(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* fieldsBuilder);
};

struct FB_IExternalEngine
{
	void* cloopDummy[1];
	struct FB_IExternalEngineVTable* vtable;
};

CLOOP_EXTERN_C void FB_IExternalEngine_addRef(struct FB_IExternalEngine* self);
CLOOP_EXTERN_C int FB_IExternalEngine_release(struct FB_IExternalEngine* self);
CLOOP_EXTERN_C void FB_IExternalEngine_setOwner(struct FB_IExternalEngine* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_IExternalEngine_getOwner(struct FB_IExternalEngine* self);
CLOOP_EXTERN_C void FB_IExternalEngine_open(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context, char* charSet, unsigned charSetSize);
CLOOP_EXTERN_C void FB_IExternalEngine_openAttachment(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context);
CLOOP_EXTERN_C void FB_IExternalEngine_closeAttachment(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context);
CLOOP_EXTERN_C struct FB_IExternalFunction* FB_IExternalEngine_makeFunction(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* inBuilder, struct FB_IMetadataBuilder* outBuilder);
CLOOP_EXTERN_C struct FB_IExternalProcedure* FB_IExternalEngine_makeProcedure(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* inBuilder, struct FB_IMetadataBuilder* outBuilder);
CLOOP_EXTERN_C struct FB_IExternalTrigger* FB_IExternalEngine_makeTrigger(struct FB_IExternalEngine* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* fieldsBuilder);

#define FB_ITimer_VERSION 3

struct FB_ITimer;

struct FB_ITimerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_ITimer* self);
	int (*release)(struct FB_ITimer* self);
	void (*handler)(struct FB_ITimer* self);
};

struct FB_ITimer
{
	void* cloopDummy[1];
	struct FB_ITimerVTable* vtable;
};

CLOOP_EXTERN_C void FB_ITimer_addRef(struct FB_ITimer* self);
CLOOP_EXTERN_C int FB_ITimer_release(struct FB_ITimer* self);
CLOOP_EXTERN_C void FB_ITimer_handler(struct FB_ITimer* self);

#define FB_ITimerControl_VERSION 2

struct FB_ITimerControl;

struct FB_ITimerControlVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*start)(struct FB_ITimerControl* self, struct FB_IStatus* status, struct FB_ITimer* timer, ISC_UINT64 microSeconds);
	void (*stop)(struct FB_ITimerControl* self, struct FB_IStatus* status, struct FB_ITimer* timer);
};

struct FB_ITimerControl
{
	void* cloopDummy[1];
	struct FB_ITimerControlVTable* vtable;
};

CLOOP_EXTERN_C void FB_ITimerControl_start(struct FB_ITimerControl* self, struct FB_IStatus* status, struct FB_ITimer* timer, ISC_UINT64 microSeconds);
CLOOP_EXTERN_C void FB_ITimerControl_stop(struct FB_ITimerControl* self, struct FB_IStatus* status, struct FB_ITimer* timer);

#define FB_IVersionCallback_VERSION 1

struct FB_IVersionCallback;

struct FB_IVersionCallbackVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*callback)(struct FB_IVersionCallback* self, struct FB_IStatus* status, const char* text);
};

struct FB_IVersionCallback
{
	void* cloopDummy[1];
	struct FB_IVersionCallbackVTable* vtable;
};

CLOOP_EXTERN_C void FB_IVersionCallback_callback(struct FB_IVersionCallback* self, struct FB_IStatus* status, const char* text);

#define FB_IUtil_VERSION 12

struct FB_IUtil;

struct FB_IUtilVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*getFbVersion)(struct FB_IUtil* self, struct FB_IStatus* status, struct FB_IAttachment* att, struct FB_IVersionCallback* callback);
	void (*loadBlob)(struct FB_IUtil* self, struct FB_IStatus* status, ISC_QUAD* blobId, struct FB_IAttachment* att, struct FB_ITransaction* tra, const char* file, FB_BOOLEAN txt);
	void (*dumpBlob)(struct FB_IUtil* self, struct FB_IStatus* status, ISC_QUAD* blobId, struct FB_IAttachment* att, struct FB_ITransaction* tra, const char* file, FB_BOOLEAN txt);
	void (*getPerfCounters)(struct FB_IUtil* self, struct FB_IStatus* status, struct FB_IAttachment* att, const char* countersSet, ISC_INT64* counters);
	struct FB_IAttachment* (*executeCreateDatabase)(struct FB_IUtil* self, struct FB_IStatus* status, unsigned stmtLength, const char* creatDBstatement, unsigned dialect, FB_BOOLEAN* stmtIsCreateDb);
	void (*decodeDate)(struct FB_IUtil* self, ISC_DATE date, unsigned* year, unsigned* month, unsigned* day);
	void (*decodeTime)(struct FB_IUtil* self, ISC_TIME time, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions);
	ISC_DATE (*encodeDate)(struct FB_IUtil* self, unsigned year, unsigned month, unsigned day);
	ISC_TIME (*encodeTime)(struct FB_IUtil* self, unsigned hours, unsigned minutes, unsigned seconds, unsigned fractions);
	unsigned (*formatStatus)(struct FB_IUtil* self, char* buffer, unsigned bufferSize, struct FB_IStatus* status);
	unsigned (*getClientVersion)(struct FB_IUtil* self);
	struct FB_IXpbBuilder* (*getXpbBuilder)(struct FB_IUtil* self, struct FB_IStatus* status, unsigned kind, const unsigned char* buf, unsigned len);
};

struct FB_IUtil
{
	void* cloopDummy[1];
	struct FB_IUtilVTable* vtable;
};

CLOOP_EXTERN_C void FB_IUtil_getFbVersion(struct FB_IUtil* self, struct FB_IStatus* status, struct FB_IAttachment* att, struct FB_IVersionCallback* callback);
CLOOP_EXTERN_C void FB_IUtil_loadBlob(struct FB_IUtil* self, struct FB_IStatus* status, ISC_QUAD* blobId, struct FB_IAttachment* att, struct FB_ITransaction* tra, const char* file, FB_BOOLEAN txt);
CLOOP_EXTERN_C void FB_IUtil_dumpBlob(struct FB_IUtil* self, struct FB_IStatus* status, ISC_QUAD* blobId, struct FB_IAttachment* att, struct FB_ITransaction* tra, const char* file, FB_BOOLEAN txt);
CLOOP_EXTERN_C void FB_IUtil_getPerfCounters(struct FB_IUtil* self, struct FB_IStatus* status, struct FB_IAttachment* att, const char* countersSet, ISC_INT64* counters);
CLOOP_EXTERN_C struct FB_IAttachment* FB_IUtil_executeCreateDatabase(struct FB_IUtil* self, struct FB_IStatus* status, unsigned stmtLength, const char* creatDBstatement, unsigned dialect, FB_BOOLEAN* stmtIsCreateDb);
CLOOP_EXTERN_C void FB_IUtil_decodeDate(struct FB_IUtil* self, ISC_DATE date, unsigned* year, unsigned* month, unsigned* day);
CLOOP_EXTERN_C void FB_IUtil_decodeTime(struct FB_IUtil* self, ISC_TIME time, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions);
CLOOP_EXTERN_C ISC_DATE FB_IUtil_encodeDate(struct FB_IUtil* self, unsigned year, unsigned month, unsigned day);
CLOOP_EXTERN_C ISC_TIME FB_IUtil_encodeTime(struct FB_IUtil* self, unsigned hours, unsigned minutes, unsigned seconds, unsigned fractions);
CLOOP_EXTERN_C unsigned FB_IUtil_formatStatus(struct FB_IUtil* self, char* buffer, unsigned bufferSize, struct FB_IStatus* status);
CLOOP_EXTERN_C unsigned FB_IUtil_getClientVersion(struct FB_IUtil* self);
CLOOP_EXTERN_C struct FB_IXpbBuilder* FB_IUtil_getXpbBuilder(struct FB_IUtil* self, struct FB_IStatus* status, unsigned kind, const unsigned char* buf, unsigned len);

#define FB_IXpbBuilder_VERSION 21

#define FB_IXpbBuilder_DPB ((unsigned) (1))
#define FB_IXpbBuilder_SPB_ATTACH ((unsigned) (2))
#define FB_IXpbBuilder_SPB_START ((unsigned) (3))
#define FB_IXpbBuilder_TPB ((unsigned) (4))

struct FB_IXpbBuilder;

struct FB_IXpbBuilderVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IXpbBuilder* self);
	void (*clear)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	void (*removeCurrent)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	void (*insertInt)(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag, int value);
	void (*insertBigInt)(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag, ISC_INT64 value);
	void (*insertBytes)(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag, const void* bytes, unsigned length);
	void (*insertString)(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag, const char* str);
	void (*insertTag)(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag);
	FB_BOOLEAN (*isEof)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	void (*moveNext)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	void (*rewind)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	FB_BOOLEAN (*findFirst)(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag);
	FB_BOOLEAN (*findNext)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	unsigned char (*getTag)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	unsigned (*getLength)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	int (*getInt)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	ISC_INT64 (*getBigInt)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	const char* (*getString)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	const unsigned char* (*getBytes)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	unsigned (*getBufferLength)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
	const unsigned char* (*getBuffer)(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
};

struct FB_IXpbBuilder
{
	void* cloopDummy[1];
	struct FB_IXpbBuilderVTable* vtable;
};

CLOOP_EXTERN_C void FB_IXpbBuilder_dispose(struct FB_IXpbBuilder* self);
CLOOP_EXTERN_C void FB_IXpbBuilder_clear(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IXpbBuilder_removeCurrent(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IXpbBuilder_insertInt(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag, int value);
CLOOP_EXTERN_C void FB_IXpbBuilder_insertBigInt(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag, ISC_INT64 value);
CLOOP_EXTERN_C void FB_IXpbBuilder_insertBytes(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag, const void* bytes, unsigned length);
CLOOP_EXTERN_C void FB_IXpbBuilder_insertString(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag, const char* str);
CLOOP_EXTERN_C void FB_IXpbBuilder_insertTag(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag);
CLOOP_EXTERN_C FB_BOOLEAN FB_IXpbBuilder_isEof(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IXpbBuilder_moveNext(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C void FB_IXpbBuilder_rewind(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C FB_BOOLEAN FB_IXpbBuilder_findFirst(struct FB_IXpbBuilder* self, struct FB_IStatus* status, unsigned char tag);
CLOOP_EXTERN_C FB_BOOLEAN FB_IXpbBuilder_findNext(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C unsigned char FB_IXpbBuilder_getTag(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C unsigned FB_IXpbBuilder_getLength(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C int FB_IXpbBuilder_getInt(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C ISC_INT64 FB_IXpbBuilder_getBigInt(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C const char* FB_IXpbBuilder_getString(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C const unsigned char* FB_IXpbBuilder_getBytes(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C unsigned FB_IXpbBuilder_getBufferLength(struct FB_IXpbBuilder* self, struct FB_IStatus* status);
CLOOP_EXTERN_C const unsigned char* FB_IXpbBuilder_getBuffer(struct FB_IXpbBuilder* self, struct FB_IStatus* status);

#define FB_ITraceConnection_VERSION 9

#define FB_ITraceConnection_KIND_DATABASE ((unsigned) (1))
#define FB_ITraceConnection_KIND_SERVICE ((unsigned) (2))

struct FB_ITraceConnection;

struct FB_ITraceConnectionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*getKind)(struct FB_ITraceConnection* self);
	int (*getProcessID)(struct FB_ITraceConnection* self);
	const char* (*getUserName)(struct FB_ITraceConnection* self);
	const char* (*getRoleName)(struct FB_ITraceConnection* self);
	const char* (*getCharSet)(struct FB_ITraceConnection* self);
	const char* (*getRemoteProtocol)(struct FB_ITraceConnection* self);
	const char* (*getRemoteAddress)(struct FB_ITraceConnection* self);
	int (*getRemoteProcessID)(struct FB_ITraceConnection* self);
	const char* (*getRemoteProcessName)(struct FB_ITraceConnection* self);
};

struct FB_ITraceConnection
{
	void* cloopDummy[1];
	struct FB_ITraceConnectionVTable* vtable;
};

CLOOP_EXTERN_C unsigned FB_ITraceConnection_getKind(struct FB_ITraceConnection* self);
CLOOP_EXTERN_C int FB_ITraceConnection_getProcessID(struct FB_ITraceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceConnection_getUserName(struct FB_ITraceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceConnection_getRoleName(struct FB_ITraceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceConnection_getCharSet(struct FB_ITraceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceConnection_getRemoteProtocol(struct FB_ITraceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceConnection_getRemoteAddress(struct FB_ITraceConnection* self);
CLOOP_EXTERN_C int FB_ITraceConnection_getRemoteProcessID(struct FB_ITraceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceConnection_getRemoteProcessName(struct FB_ITraceConnection* self);

#define FB_ITraceDatabaseConnection_VERSION 11

struct FB_ITraceDatabaseConnection;

struct FB_ITraceDatabaseConnectionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*getKind)(struct FB_ITraceDatabaseConnection* self);
	int (*getProcessID)(struct FB_ITraceDatabaseConnection* self);
	const char* (*getUserName)(struct FB_ITraceDatabaseConnection* self);
	const char* (*getRoleName)(struct FB_ITraceDatabaseConnection* self);
	const char* (*getCharSet)(struct FB_ITraceDatabaseConnection* self);
	const char* (*getRemoteProtocol)(struct FB_ITraceDatabaseConnection* self);
	const char* (*getRemoteAddress)(struct FB_ITraceDatabaseConnection* self);
	int (*getRemoteProcessID)(struct FB_ITraceDatabaseConnection* self);
	const char* (*getRemoteProcessName)(struct FB_ITraceDatabaseConnection* self);
	int (*getConnectionID)(struct FB_ITraceDatabaseConnection* self);
	const char* (*getDatabaseName)(struct FB_ITraceDatabaseConnection* self);
};

struct FB_ITraceDatabaseConnection
{
	void* cloopDummy[1];
	struct FB_ITraceDatabaseConnectionVTable* vtable;
};

CLOOP_EXTERN_C unsigned FB_ITraceDatabaseConnection_getKind(struct FB_ITraceDatabaseConnection* self);
CLOOP_EXTERN_C int FB_ITraceDatabaseConnection_getProcessID(struct FB_ITraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceDatabaseConnection_getUserName(struct FB_ITraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceDatabaseConnection_getRoleName(struct FB_ITraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceDatabaseConnection_getCharSet(struct FB_ITraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceDatabaseConnection_getRemoteProtocol(struct FB_ITraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceDatabaseConnection_getRemoteAddress(struct FB_ITraceDatabaseConnection* self);
CLOOP_EXTERN_C int FB_ITraceDatabaseConnection_getRemoteProcessID(struct FB_ITraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceDatabaseConnection_getRemoteProcessName(struct FB_ITraceDatabaseConnection* self);
CLOOP_EXTERN_C int FB_ITraceDatabaseConnection_getConnectionID(struct FB_ITraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceDatabaseConnection_getDatabaseName(struct FB_ITraceDatabaseConnection* self);

#define FB_ITraceTransaction_VERSION 5

#define FB_ITraceTransaction_ISOLATION_CONSISTENCY ((unsigned) (1))
#define FB_ITraceTransaction_ISOLATION_CONCURRENCY ((unsigned) (2))
#define FB_ITraceTransaction_ISOLATION_READ_COMMITTED_RECVER ((unsigned) (3))
#define FB_ITraceTransaction_ISOLATION_READ_COMMITTED_NORECVER ((unsigned) (4))

struct FB_ITraceTransaction;

struct FB_ITraceTransactionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*getTransactionID)(struct FB_ITraceTransaction* self);
	FB_BOOLEAN (*getReadOnly)(struct FB_ITraceTransaction* self);
	int (*getWait)(struct FB_ITraceTransaction* self);
	unsigned (*getIsolation)(struct FB_ITraceTransaction* self);
	struct PerformanceInfo* (*getPerf)(struct FB_ITraceTransaction* self);
};

struct FB_ITraceTransaction
{
	void* cloopDummy[1];
	struct FB_ITraceTransactionVTable* vtable;
};

CLOOP_EXTERN_C unsigned FB_ITraceTransaction_getTransactionID(struct FB_ITraceTransaction* self);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITraceTransaction_getReadOnly(struct FB_ITraceTransaction* self);
CLOOP_EXTERN_C int FB_ITraceTransaction_getWait(struct FB_ITraceTransaction* self);
CLOOP_EXTERN_C unsigned FB_ITraceTransaction_getIsolation(struct FB_ITraceTransaction* self);
CLOOP_EXTERN_C struct PerformanceInfo* FB_ITraceTransaction_getPerf(struct FB_ITraceTransaction* self);

#define FB_ITraceParams_VERSION 2

struct FB_ITraceParams;

struct FB_ITraceParamsVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*getCount)(struct FB_ITraceParams* self);
	const struct dsc* (*getParam)(struct FB_ITraceParams* self, unsigned idx);
};

struct FB_ITraceParams
{
	void* cloopDummy[1];
	struct FB_ITraceParamsVTable* vtable;
};

CLOOP_EXTERN_C unsigned FB_ITraceParams_getCount(struct FB_ITraceParams* self);
CLOOP_EXTERN_C const struct dsc* FB_ITraceParams_getParam(struct FB_ITraceParams* self, unsigned idx);

#define FB_ITraceStatement_VERSION 2

struct FB_ITraceStatement;

struct FB_ITraceStatementVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	int (*getStmtID)(struct FB_ITraceStatement* self);
	struct PerformanceInfo* (*getPerf)(struct FB_ITraceStatement* self);
};

struct FB_ITraceStatement
{
	void* cloopDummy[1];
	struct FB_ITraceStatementVTable* vtable;
};

CLOOP_EXTERN_C int FB_ITraceStatement_getStmtID(struct FB_ITraceStatement* self);
CLOOP_EXTERN_C struct PerformanceInfo* FB_ITraceStatement_getPerf(struct FB_ITraceStatement* self);

#define FB_ITraceSQLStatement_VERSION 7

struct FB_ITraceSQLStatement;

struct FB_ITraceSQLStatementVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	int (*getStmtID)(struct FB_ITraceSQLStatement* self);
	struct PerformanceInfo* (*getPerf)(struct FB_ITraceSQLStatement* self);
	const char* (*getText)(struct FB_ITraceSQLStatement* self);
	const char* (*getPlan)(struct FB_ITraceSQLStatement* self);
	struct FB_ITraceParams* (*getInputs)(struct FB_ITraceSQLStatement* self);
	const char* (*getTextUTF8)(struct FB_ITraceSQLStatement* self);
	const char* (*getExplainedPlan)(struct FB_ITraceSQLStatement* self);
};

struct FB_ITraceSQLStatement
{
	void* cloopDummy[1];
	struct FB_ITraceSQLStatementVTable* vtable;
};

CLOOP_EXTERN_C int FB_ITraceSQLStatement_getStmtID(struct FB_ITraceSQLStatement* self);
CLOOP_EXTERN_C struct PerformanceInfo* FB_ITraceSQLStatement_getPerf(struct FB_ITraceSQLStatement* self);
CLOOP_EXTERN_C const char* FB_ITraceSQLStatement_getText(struct FB_ITraceSQLStatement* self);
CLOOP_EXTERN_C const char* FB_ITraceSQLStatement_getPlan(struct FB_ITraceSQLStatement* self);
CLOOP_EXTERN_C struct FB_ITraceParams* FB_ITraceSQLStatement_getInputs(struct FB_ITraceSQLStatement* self);
CLOOP_EXTERN_C const char* FB_ITraceSQLStatement_getTextUTF8(struct FB_ITraceSQLStatement* self);
CLOOP_EXTERN_C const char* FB_ITraceSQLStatement_getExplainedPlan(struct FB_ITraceSQLStatement* self);

#define FB_ITraceBLRStatement_VERSION 5

struct FB_ITraceBLRStatement;

struct FB_ITraceBLRStatementVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	int (*getStmtID)(struct FB_ITraceBLRStatement* self);
	struct PerformanceInfo* (*getPerf)(struct FB_ITraceBLRStatement* self);
	const unsigned char* (*getData)(struct FB_ITraceBLRStatement* self);
	unsigned (*getDataLength)(struct FB_ITraceBLRStatement* self);
	const char* (*getText)(struct FB_ITraceBLRStatement* self);
};

struct FB_ITraceBLRStatement
{
	void* cloopDummy[1];
	struct FB_ITraceBLRStatementVTable* vtable;
};

CLOOP_EXTERN_C int FB_ITraceBLRStatement_getStmtID(struct FB_ITraceBLRStatement* self);
CLOOP_EXTERN_C struct PerformanceInfo* FB_ITraceBLRStatement_getPerf(struct FB_ITraceBLRStatement* self);
CLOOP_EXTERN_C const unsigned char* FB_ITraceBLRStatement_getData(struct FB_ITraceBLRStatement* self);
CLOOP_EXTERN_C unsigned FB_ITraceBLRStatement_getDataLength(struct FB_ITraceBLRStatement* self);
CLOOP_EXTERN_C const char* FB_ITraceBLRStatement_getText(struct FB_ITraceBLRStatement* self);

#define FB_ITraceDYNRequest_VERSION 3

struct FB_ITraceDYNRequest;

struct FB_ITraceDYNRequestVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const unsigned char* (*getData)(struct FB_ITraceDYNRequest* self);
	unsigned (*getDataLength)(struct FB_ITraceDYNRequest* self);
	const char* (*getText)(struct FB_ITraceDYNRequest* self);
};

struct FB_ITraceDYNRequest
{
	void* cloopDummy[1];
	struct FB_ITraceDYNRequestVTable* vtable;
};

CLOOP_EXTERN_C const unsigned char* FB_ITraceDYNRequest_getData(struct FB_ITraceDYNRequest* self);
CLOOP_EXTERN_C unsigned FB_ITraceDYNRequest_getDataLength(struct FB_ITraceDYNRequest* self);
CLOOP_EXTERN_C const char* FB_ITraceDYNRequest_getText(struct FB_ITraceDYNRequest* self);

#define FB_ITraceContextVariable_VERSION 3

struct FB_ITraceContextVariable;

struct FB_ITraceContextVariableVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getNameSpace)(struct FB_ITraceContextVariable* self);
	const char* (*getVarName)(struct FB_ITraceContextVariable* self);
	const char* (*getVarValue)(struct FB_ITraceContextVariable* self);
};

struct FB_ITraceContextVariable
{
	void* cloopDummy[1];
	struct FB_ITraceContextVariableVTable* vtable;
};

CLOOP_EXTERN_C const char* FB_ITraceContextVariable_getNameSpace(struct FB_ITraceContextVariable* self);
CLOOP_EXTERN_C const char* FB_ITraceContextVariable_getVarName(struct FB_ITraceContextVariable* self);
CLOOP_EXTERN_C const char* FB_ITraceContextVariable_getVarValue(struct FB_ITraceContextVariable* self);

#define FB_ITraceProcedure_VERSION 3

struct FB_ITraceProcedure;

struct FB_ITraceProcedureVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getProcName)(struct FB_ITraceProcedure* self);
	struct FB_ITraceParams* (*getInputs)(struct FB_ITraceProcedure* self);
	struct PerformanceInfo* (*getPerf)(struct FB_ITraceProcedure* self);
};

struct FB_ITraceProcedure
{
	void* cloopDummy[1];
	struct FB_ITraceProcedureVTable* vtable;
};

CLOOP_EXTERN_C const char* FB_ITraceProcedure_getProcName(struct FB_ITraceProcedure* self);
CLOOP_EXTERN_C struct FB_ITraceParams* FB_ITraceProcedure_getInputs(struct FB_ITraceProcedure* self);
CLOOP_EXTERN_C struct PerformanceInfo* FB_ITraceProcedure_getPerf(struct FB_ITraceProcedure* self);

#define FB_ITraceFunction_VERSION 4

struct FB_ITraceFunction;

struct FB_ITraceFunctionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getFuncName)(struct FB_ITraceFunction* self);
	struct FB_ITraceParams* (*getInputs)(struct FB_ITraceFunction* self);
	struct FB_ITraceParams* (*getResult)(struct FB_ITraceFunction* self);
	struct PerformanceInfo* (*getPerf)(struct FB_ITraceFunction* self);
};

struct FB_ITraceFunction
{
	void* cloopDummy[1];
	struct FB_ITraceFunctionVTable* vtable;
};

CLOOP_EXTERN_C const char* FB_ITraceFunction_getFuncName(struct FB_ITraceFunction* self);
CLOOP_EXTERN_C struct FB_ITraceParams* FB_ITraceFunction_getInputs(struct FB_ITraceFunction* self);
CLOOP_EXTERN_C struct FB_ITraceParams* FB_ITraceFunction_getResult(struct FB_ITraceFunction* self);
CLOOP_EXTERN_C struct PerformanceInfo* FB_ITraceFunction_getPerf(struct FB_ITraceFunction* self);

#define FB_ITraceTrigger_VERSION 5

#define FB_ITraceTrigger_TYPE_ALL ((unsigned) (0))
#define FB_ITraceTrigger_TYPE_BEFORE ((unsigned) (1))
#define FB_ITraceTrigger_TYPE_AFTER ((unsigned) (2))

struct FB_ITraceTrigger;

struct FB_ITraceTriggerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getTriggerName)(struct FB_ITraceTrigger* self);
	const char* (*getRelationName)(struct FB_ITraceTrigger* self);
	int (*getAction)(struct FB_ITraceTrigger* self);
	int (*getWhich)(struct FB_ITraceTrigger* self);
	struct PerformanceInfo* (*getPerf)(struct FB_ITraceTrigger* self);
};

struct FB_ITraceTrigger
{
	void* cloopDummy[1];
	struct FB_ITraceTriggerVTable* vtable;
};

CLOOP_EXTERN_C const char* FB_ITraceTrigger_getTriggerName(struct FB_ITraceTrigger* self);
CLOOP_EXTERN_C const char* FB_ITraceTrigger_getRelationName(struct FB_ITraceTrigger* self);
CLOOP_EXTERN_C int FB_ITraceTrigger_getAction(struct FB_ITraceTrigger* self);
CLOOP_EXTERN_C int FB_ITraceTrigger_getWhich(struct FB_ITraceTrigger* self);
CLOOP_EXTERN_C struct PerformanceInfo* FB_ITraceTrigger_getPerf(struct FB_ITraceTrigger* self);

#define FB_ITraceServiceConnection_VERSION 12

struct FB_ITraceServiceConnection;

struct FB_ITraceServiceConnectionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*getKind)(struct FB_ITraceServiceConnection* self);
	int (*getProcessID)(struct FB_ITraceServiceConnection* self);
	const char* (*getUserName)(struct FB_ITraceServiceConnection* self);
	const char* (*getRoleName)(struct FB_ITraceServiceConnection* self);
	const char* (*getCharSet)(struct FB_ITraceServiceConnection* self);
	const char* (*getRemoteProtocol)(struct FB_ITraceServiceConnection* self);
	const char* (*getRemoteAddress)(struct FB_ITraceServiceConnection* self);
	int (*getRemoteProcessID)(struct FB_ITraceServiceConnection* self);
	const char* (*getRemoteProcessName)(struct FB_ITraceServiceConnection* self);
	void* (*getServiceID)(struct FB_ITraceServiceConnection* self);
	const char* (*getServiceMgr)(struct FB_ITraceServiceConnection* self);
	const char* (*getServiceName)(struct FB_ITraceServiceConnection* self);
};

struct FB_ITraceServiceConnection
{
	void* cloopDummy[1];
	struct FB_ITraceServiceConnectionVTable* vtable;
};

CLOOP_EXTERN_C unsigned FB_ITraceServiceConnection_getKind(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C int FB_ITraceServiceConnection_getProcessID(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceServiceConnection_getUserName(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceServiceConnection_getRoleName(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceServiceConnection_getCharSet(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceServiceConnection_getRemoteProtocol(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceServiceConnection_getRemoteAddress(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C int FB_ITraceServiceConnection_getRemoteProcessID(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceServiceConnection_getRemoteProcessName(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C void* FB_ITraceServiceConnection_getServiceID(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceServiceConnection_getServiceMgr(struct FB_ITraceServiceConnection* self);
CLOOP_EXTERN_C const char* FB_ITraceServiceConnection_getServiceName(struct FB_ITraceServiceConnection* self);

#define FB_ITraceStatusVector_VERSION 4

struct FB_ITraceStatusVector;

struct FB_ITraceStatusVectorVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	FB_BOOLEAN (*hasError)(struct FB_ITraceStatusVector* self);
	FB_BOOLEAN (*hasWarning)(struct FB_ITraceStatusVector* self);
	struct FB_IStatus* (*getStatus)(struct FB_ITraceStatusVector* self);
	const char* (*getText)(struct FB_ITraceStatusVector* self);
};

struct FB_ITraceStatusVector
{
	void* cloopDummy[1];
	struct FB_ITraceStatusVectorVTable* vtable;
};

CLOOP_EXTERN_C FB_BOOLEAN FB_ITraceStatusVector_hasError(struct FB_ITraceStatusVector* self);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITraceStatusVector_hasWarning(struct FB_ITraceStatusVector* self);
CLOOP_EXTERN_C struct FB_IStatus* FB_ITraceStatusVector_getStatus(struct FB_ITraceStatusVector* self);
CLOOP_EXTERN_C const char* FB_ITraceStatusVector_getText(struct FB_ITraceStatusVector* self);

#define FB_ITraceSweepInfo_VERSION 5

struct FB_ITraceSweepInfo;

struct FB_ITraceSweepInfoVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	ISC_UINT64 (*getOIT)(struct FB_ITraceSweepInfo* self);
	ISC_UINT64 (*getOST)(struct FB_ITraceSweepInfo* self);
	ISC_UINT64 (*getOAT)(struct FB_ITraceSweepInfo* self);
	ISC_UINT64 (*getNext)(struct FB_ITraceSweepInfo* self);
	struct PerformanceInfo* (*getPerf)(struct FB_ITraceSweepInfo* self);
};

struct FB_ITraceSweepInfo
{
	void* cloopDummy[1];
	struct FB_ITraceSweepInfoVTable* vtable;
};

CLOOP_EXTERN_C ISC_UINT64 FB_ITraceSweepInfo_getOIT(struct FB_ITraceSweepInfo* self);
CLOOP_EXTERN_C ISC_UINT64 FB_ITraceSweepInfo_getOST(struct FB_ITraceSweepInfo* self);
CLOOP_EXTERN_C ISC_UINT64 FB_ITraceSweepInfo_getOAT(struct FB_ITraceSweepInfo* self);
CLOOP_EXTERN_C ISC_UINT64 FB_ITraceSweepInfo_getNext(struct FB_ITraceSweepInfo* self);
CLOOP_EXTERN_C struct PerformanceInfo* FB_ITraceSweepInfo_getPerf(struct FB_ITraceSweepInfo* self);

#define FB_ITraceLogWriter_VERSION 3

struct FB_ITraceLogWriter;

struct FB_ITraceLogWriterVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_ITraceLogWriter* self);
	int (*release)(struct FB_ITraceLogWriter* self);
	unsigned (*write)(struct FB_ITraceLogWriter* self, const void* buf, unsigned size);
};

struct FB_ITraceLogWriter
{
	void* cloopDummy[1];
	struct FB_ITraceLogWriterVTable* vtable;
};

CLOOP_EXTERN_C void FB_ITraceLogWriter_addRef(struct FB_ITraceLogWriter* self);
CLOOP_EXTERN_C int FB_ITraceLogWriter_release(struct FB_ITraceLogWriter* self);
CLOOP_EXTERN_C unsigned FB_ITraceLogWriter_write(struct FB_ITraceLogWriter* self, const void* buf, unsigned size);

#define FB_ITraceInitInfo_VERSION 7

struct FB_ITraceInitInfo;

struct FB_ITraceInitInfoVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getConfigText)(struct FB_ITraceInitInfo* self);
	int (*getTraceSessionID)(struct FB_ITraceInitInfo* self);
	const char* (*getTraceSessionName)(struct FB_ITraceInitInfo* self);
	const char* (*getFirebirdRootDirectory)(struct FB_ITraceInitInfo* self);
	const char* (*getDatabaseName)(struct FB_ITraceInitInfo* self);
	struct FB_ITraceDatabaseConnection* (*getConnection)(struct FB_ITraceInitInfo* self);
	struct FB_ITraceLogWriter* (*getLogWriter)(struct FB_ITraceInitInfo* self);
};

struct FB_ITraceInitInfo
{
	void* cloopDummy[1];
	struct FB_ITraceInitInfoVTable* vtable;
};

CLOOP_EXTERN_C const char* FB_ITraceInitInfo_getConfigText(struct FB_ITraceInitInfo* self);
CLOOP_EXTERN_C int FB_ITraceInitInfo_getTraceSessionID(struct FB_ITraceInitInfo* self);
CLOOP_EXTERN_C const char* FB_ITraceInitInfo_getTraceSessionName(struct FB_ITraceInitInfo* self);
CLOOP_EXTERN_C const char* FB_ITraceInitInfo_getFirebirdRootDirectory(struct FB_ITraceInitInfo* self);
CLOOP_EXTERN_C const char* FB_ITraceInitInfo_getDatabaseName(struct FB_ITraceInitInfo* self);
CLOOP_EXTERN_C struct FB_ITraceDatabaseConnection* FB_ITraceInitInfo_getConnection(struct FB_ITraceInitInfo* self);
CLOOP_EXTERN_C struct FB_ITraceLogWriter* FB_ITraceInitInfo_getLogWriter(struct FB_ITraceInitInfo* self);

#define FB_ITracePlugin_VERSION 23

#define FB_ITracePlugin_RESULT_SUCCESS ((unsigned) (0))
#define FB_ITracePlugin_RESULT_FAILED ((unsigned) (1))
#define FB_ITracePlugin_RESULT_UNAUTHORIZED ((unsigned) (2))
#define FB_ITracePlugin_SWEEP_STATE_STARTED ((unsigned) (1))
#define FB_ITracePlugin_SWEEP_STATE_FINISHED ((unsigned) (2))
#define FB_ITracePlugin_SWEEP_STATE_FAILED ((unsigned) (3))
#define FB_ITracePlugin_SWEEP_STATE_PROGRESS ((unsigned) (4))

struct FB_ITracePlugin;

struct FB_ITracePluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_ITracePlugin* self);
	int (*release)(struct FB_ITracePlugin* self);
	const char* (*trace_get_error)(struct FB_ITracePlugin* self);
	FB_BOOLEAN (*trace_attach)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, FB_BOOLEAN create_db, unsigned att_result);
	FB_BOOLEAN (*trace_detach)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, FB_BOOLEAN drop_db);
	FB_BOOLEAN (*trace_transaction_start)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, unsigned tpb_length, const unsigned char* tpb, unsigned tra_result);
	FB_BOOLEAN (*trace_transaction_end)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, FB_BOOLEAN commit, FB_BOOLEAN retain_context, unsigned tra_result);
	FB_BOOLEAN (*trace_proc_execute)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceProcedure* procedure, FB_BOOLEAN started, unsigned proc_result);
	FB_BOOLEAN (*trace_trigger_execute)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceTrigger* trigger, FB_BOOLEAN started, unsigned trig_result);
	FB_BOOLEAN (*trace_set_context)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceContextVariable* variable);
	FB_BOOLEAN (*trace_dsql_prepare)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceSQLStatement* statement, ISC_INT64 time_millis, unsigned req_result);
	FB_BOOLEAN (*trace_dsql_free)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceSQLStatement* statement, unsigned option);
	FB_BOOLEAN (*trace_dsql_execute)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceSQLStatement* statement, FB_BOOLEAN started, unsigned req_result);
	FB_BOOLEAN (*trace_blr_compile)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceBLRStatement* statement, ISC_INT64 time_millis, unsigned req_result);
	FB_BOOLEAN (*trace_blr_execute)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceBLRStatement* statement, unsigned req_result);
	FB_BOOLEAN (*trace_dyn_execute)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceDYNRequest* request, ISC_INT64 time_millis, unsigned req_result);
	FB_BOOLEAN (*trace_service_attach)(struct FB_ITracePlugin* self, struct FB_ITraceServiceConnection* service, unsigned att_result);
	FB_BOOLEAN (*trace_service_start)(struct FB_ITracePlugin* self, struct FB_ITraceServiceConnection* service, unsigned switches_length, const char* switches, unsigned start_result);
	FB_BOOLEAN (*trace_service_query)(struct FB_ITracePlugin* self, struct FB_ITraceServiceConnection* service, unsigned send_item_length, const unsigned char* send_items, unsigned recv_item_length, const unsigned char* recv_items, unsigned query_result);
	FB_BOOLEAN (*trace_service_detach)(struct FB_ITracePlugin* self, struct FB_ITraceServiceConnection* service, unsigned detach_result);
	FB_BOOLEAN (*trace_event_error)(struct FB_ITracePlugin* self, struct FB_ITraceConnection* connection, struct FB_ITraceStatusVector* status, const char* function);
	FB_BOOLEAN (*trace_event_sweep)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceSweepInfo* sweep, unsigned sweep_state);
	FB_BOOLEAN (*trace_func_execute)(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceFunction* function, FB_BOOLEAN started, unsigned func_result);
};

struct FB_ITracePlugin
{
	void* cloopDummy[1];
	struct FB_ITracePluginVTable* vtable;
};

CLOOP_EXTERN_C void FB_ITracePlugin_addRef(struct FB_ITracePlugin* self);
CLOOP_EXTERN_C int FB_ITracePlugin_release(struct FB_ITracePlugin* self);
CLOOP_EXTERN_C const char* FB_ITracePlugin_trace_get_error(struct FB_ITracePlugin* self);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_attach(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, FB_BOOLEAN create_db, unsigned att_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_detach(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, FB_BOOLEAN drop_db);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_transaction_start(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, unsigned tpb_length, const unsigned char* tpb, unsigned tra_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_transaction_end(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, FB_BOOLEAN commit, FB_BOOLEAN retain_context, unsigned tra_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_proc_execute(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceProcedure* procedure, FB_BOOLEAN started, unsigned proc_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_trigger_execute(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceTrigger* trigger, FB_BOOLEAN started, unsigned trig_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_set_context(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceContextVariable* variable);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_dsql_prepare(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceSQLStatement* statement, ISC_INT64 time_millis, unsigned req_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_dsql_free(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceSQLStatement* statement, unsigned option);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_dsql_execute(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceSQLStatement* statement, FB_BOOLEAN started, unsigned req_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_blr_compile(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceBLRStatement* statement, ISC_INT64 time_millis, unsigned req_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_blr_execute(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceBLRStatement* statement, unsigned req_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_dyn_execute(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceDYNRequest* request, ISC_INT64 time_millis, unsigned req_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_service_attach(struct FB_ITracePlugin* self, struct FB_ITraceServiceConnection* service, unsigned att_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_service_start(struct FB_ITracePlugin* self, struct FB_ITraceServiceConnection* service, unsigned switches_length, const char* switches, unsigned start_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_service_query(struct FB_ITracePlugin* self, struct FB_ITraceServiceConnection* service, unsigned send_item_length, const unsigned char* send_items, unsigned recv_item_length, const unsigned char* recv_items, unsigned query_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_service_detach(struct FB_ITracePlugin* self, struct FB_ITraceServiceConnection* service, unsigned detach_result);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_event_error(struct FB_ITracePlugin* self, struct FB_ITraceConnection* connection, struct FB_ITraceStatusVector* status, const char* function);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_event_sweep(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceSweepInfo* sweep, unsigned sweep_state);
CLOOP_EXTERN_C FB_BOOLEAN FB_ITracePlugin_trace_func_execute(struct FB_ITracePlugin* self, struct FB_ITraceDatabaseConnection* connection, struct FB_ITraceTransaction* transaction, struct FB_ITraceFunction* function, FB_BOOLEAN started, unsigned func_result);

#define FB_ITraceFactory_VERSION 6

#define FB_ITraceFactory_TRACE_EVENT_ATTACH ((unsigned) (0))
#define FB_ITraceFactory_TRACE_EVENT_DETACH ((unsigned) (1))
#define FB_ITraceFactory_TRACE_EVENT_TRANSACTION_START ((unsigned) (2))
#define FB_ITraceFactory_TRACE_EVENT_TRANSACTION_END ((unsigned) (3))
#define FB_ITraceFactory_TRACE_EVENT_SET_CONTEXT ((unsigned) (4))
#define FB_ITraceFactory_TRACE_EVENT_PROC_EXECUTE ((unsigned) (5))
#define FB_ITraceFactory_TRACE_EVENT_TRIGGER_EXECUTE ((unsigned) (6))
#define FB_ITraceFactory_TRACE_EVENT_DSQL_PREPARE ((unsigned) (7))
#define FB_ITraceFactory_TRACE_EVENT_DSQL_FREE ((unsigned) (8))
#define FB_ITraceFactory_TRACE_EVENT_DSQL_EXECUTE ((unsigned) (9))
#define FB_ITraceFactory_TRACE_EVENT_BLR_COMPILE ((unsigned) (10))
#define FB_ITraceFactory_TRACE_EVENT_BLR_EXECUTE ((unsigned) (11))
#define FB_ITraceFactory_TRACE_EVENT_DYN_EXECUTE ((unsigned) (12))
#define FB_ITraceFactory_TRACE_EVENT_SERVICE_ATTACH ((unsigned) (13))
#define FB_ITraceFactory_TRACE_EVENT_SERVICE_START ((unsigned) (14))
#define FB_ITraceFactory_TRACE_EVENT_SERVICE_QUERY ((unsigned) (15))
#define FB_ITraceFactory_TRACE_EVENT_SERVICE_DETACH ((unsigned) (16))
#define FB_ITraceFactory_TRACE_EVENT_ERROR ((unsigned) (17))
#define FB_ITraceFactory_TRACE_EVENT_SWEEP ((unsigned) (18))
#define FB_ITraceFactory_TRACE_EVENT_FUNC_EXECUTE ((unsigned) (19))
#define FB_ITraceFactory_TRACE_EVENT_MAX ((unsigned) (20))

struct FB_ITraceFactory;

struct FB_ITraceFactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct FB_ITraceFactory* self);
	int (*release)(struct FB_ITraceFactory* self);
	void (*setOwner)(struct FB_ITraceFactory* self, struct FB_IReferenceCounted* r);
	struct FB_IReferenceCounted* (*getOwner)(struct FB_ITraceFactory* self);
	ISC_UINT64 (*trace_needs)(struct FB_ITraceFactory* self);
	struct FB_ITracePlugin* (*trace_create)(struct FB_ITraceFactory* self, struct FB_IStatus* status, struct FB_ITraceInitInfo* init_info);
};

struct FB_ITraceFactory
{
	void* cloopDummy[1];
	struct FB_ITraceFactoryVTable* vtable;
};

CLOOP_EXTERN_C void FB_ITraceFactory_addRef(struct FB_ITraceFactory* self);
CLOOP_EXTERN_C int FB_ITraceFactory_release(struct FB_ITraceFactory* self);
CLOOP_EXTERN_C void FB_ITraceFactory_setOwner(struct FB_ITraceFactory* self, struct FB_IReferenceCounted* r);
CLOOP_EXTERN_C struct FB_IReferenceCounted* FB_ITraceFactory_getOwner(struct FB_ITraceFactory* self);
CLOOP_EXTERN_C ISC_UINT64 FB_ITraceFactory_trace_needs(struct FB_ITraceFactory* self);
CLOOP_EXTERN_C struct FB_ITracePlugin* FB_ITraceFactory_trace_create(struct FB_ITraceFactory* self, struct FB_IStatus* status, struct FB_ITraceInitInfo* init_info);

#define FB_IUdrFunctionFactory_VERSION 3

struct FB_IUdrFunctionFactory;

struct FB_IUdrFunctionFactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IUdrFunctionFactory* self);
	void (*setup)(struct FB_IUdrFunctionFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* inBuilder, struct FB_IMetadataBuilder* outBuilder);
	struct FB_IExternalFunction* (*newItem)(struct FB_IUdrFunctionFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata);
};

struct FB_IUdrFunctionFactory
{
	void* cloopDummy[1];
	struct FB_IUdrFunctionFactoryVTable* vtable;
};

CLOOP_EXTERN_C void FB_IUdrFunctionFactory_dispose(struct FB_IUdrFunctionFactory* self);
CLOOP_EXTERN_C void FB_IUdrFunctionFactory_setup(struct FB_IUdrFunctionFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* inBuilder, struct FB_IMetadataBuilder* outBuilder);
CLOOP_EXTERN_C struct FB_IExternalFunction* FB_IUdrFunctionFactory_newItem(struct FB_IUdrFunctionFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata);

#define FB_IUdrProcedureFactory_VERSION 3

struct FB_IUdrProcedureFactory;

struct FB_IUdrProcedureFactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IUdrProcedureFactory* self);
	void (*setup)(struct FB_IUdrProcedureFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* inBuilder, struct FB_IMetadataBuilder* outBuilder);
	struct FB_IExternalProcedure* (*newItem)(struct FB_IUdrProcedureFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata);
};

struct FB_IUdrProcedureFactory
{
	void* cloopDummy[1];
	struct FB_IUdrProcedureFactoryVTable* vtable;
};

CLOOP_EXTERN_C void FB_IUdrProcedureFactory_dispose(struct FB_IUdrProcedureFactory* self);
CLOOP_EXTERN_C void FB_IUdrProcedureFactory_setup(struct FB_IUdrProcedureFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* inBuilder, struct FB_IMetadataBuilder* outBuilder);
CLOOP_EXTERN_C struct FB_IExternalProcedure* FB_IUdrProcedureFactory_newItem(struct FB_IUdrProcedureFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata);

#define FB_IUdrTriggerFactory_VERSION 3

struct FB_IUdrTriggerFactory;

struct FB_IUdrTriggerFactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct FB_IUdrTriggerFactory* self);
	void (*setup)(struct FB_IUdrTriggerFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* fieldsBuilder);
	struct FB_IExternalTrigger* (*newItem)(struct FB_IUdrTriggerFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata);
};

struct FB_IUdrTriggerFactory
{
	void* cloopDummy[1];
	struct FB_IUdrTriggerFactoryVTable* vtable;
};

CLOOP_EXTERN_C void FB_IUdrTriggerFactory_dispose(struct FB_IUdrTriggerFactory* self);
CLOOP_EXTERN_C void FB_IUdrTriggerFactory_setup(struct FB_IUdrTriggerFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata, struct FB_IMetadataBuilder* fieldsBuilder);
CLOOP_EXTERN_C struct FB_IExternalTrigger* FB_IUdrTriggerFactory_newItem(struct FB_IUdrTriggerFactory* self, struct FB_IStatus* status, struct FB_IExternalContext* context, struct FB_IRoutineMetadata* metadata);

#define FB_IUdrPlugin_VERSION 4

struct FB_IUdrPlugin;

struct FB_IUdrPluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	struct FB_IMaster* (*getMaster)(struct FB_IUdrPlugin* self);
	void (*registerFunction)(struct FB_IUdrPlugin* self, struct FB_IStatus* status, const char* name, struct FB_IUdrFunctionFactory* factory);
	void (*registerProcedure)(struct FB_IUdrPlugin* self, struct FB_IStatus* status, const char* name, struct FB_IUdrProcedureFactory* factory);
	void (*registerTrigger)(struct FB_IUdrPlugin* self, struct FB_IStatus* status, const char* name, struct FB_IUdrTriggerFactory* factory);
};

struct FB_IUdrPlugin
{
	void* cloopDummy[1];
	struct FB_IUdrPluginVTable* vtable;
};

CLOOP_EXTERN_C struct FB_IMaster* FB_IUdrPlugin_getMaster(struct FB_IUdrPlugin* self);
CLOOP_EXTERN_C void FB_IUdrPlugin_registerFunction(struct FB_IUdrPlugin* self, struct FB_IStatus* status, const char* name, struct FB_IUdrFunctionFactory* factory);
CLOOP_EXTERN_C void FB_IUdrPlugin_registerProcedure(struct FB_IUdrPlugin* self, struct FB_IStatus* status, const char* name, struct FB_IUdrProcedureFactory* factory);
CLOOP_EXTERN_C void FB_IUdrPlugin_registerTrigger(struct FB_IUdrPlugin* self, struct FB_IStatus* status, const char* name, struct FB_IUdrTriggerFactory* factory);


#endif	// FB_C_API_H
